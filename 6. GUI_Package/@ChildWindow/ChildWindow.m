classdef ChildWindow < handle
    % ChildWindow: class defining all child windows. Defining all
    % childwindows in the same class file enables shared usage of UI controls
    % among all windows and simplifies any future modifications.
    
    properties
        ChildHandles
    end
    
    methods
        % Constructor method
        function NewChild = ChildWindow(myName,myParent)
            if nargin == 0
                % If nothing is given, then just abort the operation
                NewChild.ChildHandles = struct('Name',{},...
                    'Index',1,...
                    'FigureHandle',{},...
                    'FontSize',{},...
                    'nMainTab',{},...
                    'mainTabGroup',{},...
                    'panelMainTab',{},...
                    'btnMainTab',{},...
                    'axesHandle',{},...
                    'tableHandle',{},...
                    'btnOk',{},...
                    'btnCancel',{});
                return;
            elseif nargin == 1
                % If only name of the child is given, then initialize a new parent window
                myParent = ParentWindow;
            elseif nargin == 2
                % If both inputs given then continue normally
            end
            fontSize = myParent.ParentHandles.FontSize;
            
            NewChild.ChildHandles = struct();
            NewChild.ChildHandles.Name = myName;
            NewChild.ChildHandles.Index = size(myParent.ParentHandles.ChildWindows,2)+1;
            NewChild.ChildHandles.FontSize = fontSize;
            NewChild.ChildHandles.nMainTab = 4;
            NewChild.ChildHandles.FigureHandle = figure( ...
                'Tag', 'ChildWindow', ...
                'Units', 'normalized', ...
                'Name', myName, ...
                'MenuBar', 'figure', ...
                'Toolbar','figure',...
                'NumberTitle', 'on', ...
                'Units','normalized',...
                'Position',[0.2,0.2,0.5,0.6],...
                'Color', get(0,'DefaultUicontrolBackgroundColor'), ...
                'Resize', 'on', ...
                'Visible', 'off');
            % Add the child to the parent
            addChild(myParent,NewChild);
            
            % Build the GUI based on the myName
            % Common panels shared by multiple windows
            
            %% Edit Standard Toolbar by removing the first two toolbar buttons
            % New Figure and Open File as they don't make sense in our case
            stdToolBar = (findall(...
                NewChild.ChildHandles.FigureHandle,'Type','uitoolbar'));
            stdToolBarBtns = allchild(stdToolBar);
            set(stdToolBarBtns(end),'Visible','off');
            set(stdToolBarBtns(end-1),'Visible','off');
            % Add a refresh button at the end
            updateIcon = rand(19,23,3)*0;
            updateIcon(4:17,5:7,:) = 1;
            updateIcon(4:17,16:18,:) = 1;
            updateIcon(15:17,5:16,:) = 1;
            
            
            NewChild.ChildHandles.btnRefresh = uitoggletool(stdToolBar,...
                'CData',updateIcon,...
                'Separator','on',...
                'TooltipString','Update',...
                'HandleVisibility','on',...
                'ClickedCallback', {@NewChild.btnOk_Callback,...
                myParent});
            
            
            NewChild.ChildHandles.mainTabGroup = uitabgroup(...
                'Parent', NewChild.ChildHandles.FigureHandle, ...
                'Units', 'Normalized', ...
                'Position', [0, 0, 1.0, 1.0]);
            NewChild.ChildHandles.SettingTab = ...
                uitab(NewChild.ChildHandles.mainTabGroup, 'title','Setting');
            NewChild.ChildHandles.GraphTab = ...
                uitab(NewChild.ChildHandles.mainTabGroup, 'title','Graph',...
                'BackgroundColor', 'w');
            NewChild.ChildHandles.TextTab = ...
                uitab(NewChild.ChildHandles.mainTabGroup, 'title','Text');
            NewChild.ChildHandles.TableTab = ...
                uitab(NewChild.ChildHandles.mainTabGroup, 'title','Table');
            
            NewChild.ChildHandles.axesHandle = axes( ...
                'parent',NewChild.ChildHandles.GraphTab,...
                'FontSize',fontSize,'FontName', 'FixedWidth',...
                'Units', 'Normalized',...
                'Position', [0.1,0.1, 0.8, 0.8]);
            
            NewChild.ChildHandles.textHandle = uicontrol( ...
                NewChild.ChildHandles.TextTab,...
                'Units', 'Normalized',...
                'Style','edit',...
                'Enable','inactive',...
                'FontSize',fontSize,...
                'FontName', 'FixedWidth',...
                'Min',0,...
                'Max',10000,...
                'HorizontalAlignment','left',...
                'BackgroundColor',[1,1,1],...
                'String','All text outputs will be displayed here . . . ',...
                'Position', [0,0,1,1]);
            
            NewChild.ChildHandles.tableHandle = uitable( ...
                'Parent',NewChild.ChildHandles.TableTab,...
                'FontSize',fontSize,'FontName', 'FixedWidth',...
                'Units', 'Normalized', ...
                'ColumnName', {['----------------------------------'...
                ' Data Table ------------------------------------']},...
                'Position', [0,0, 1, 1]);
           
    
            % Create all uicontrols which can be used in the setting
            % windows
            BuildChildWindowSettingPanel(NewChild,myParent);
            
            % Define Ok, Cancel and close buttons and add to Setting Tab
            btnWidth = .18;
            btnHeight = .06;
            NewChild.ChildHandles.btnOk = uicontrol( ...
                NewChild.ChildHandles.SettingTab,...
                'Units', 'Normalized', ...
                'Style','pushbutton',...
                'FontSize',fontSize,'FontName', 'FixedWidth',...
                'Position', [0.6, 0.03, btnWidth, btnHeight],...
                'String','Ok',...
                'Callback', {@NewChild.btnOk_Callback,...
                myParent});
            
            NewChild.ChildHandles.btnCancel = uicontrol( ...
                NewChild.ChildHandles.SettingTab,...
                'Units', 'Normalized', ...
                'Style','pushbutton',...
                'FontSize',fontSize,'FontName', 'FixedWidth',...
                'Position', [0.8, 0.03, btnWidth, btnHeight],...
                'String','Cancel',...
                'Callback', {@NewChild.btnCancel_Callback,...
                myParent});
            
            set(NewChild.ChildHandles.FigureHandle,...
                'CloseRequestFcn',{@NewChild.btnCancel_Callback,...
                myParent},'Visible','On')
            
            
            % Click setting tab programatically
            set(NewChild.ChildHandles.mainTabGroup,'SelectedTab',...
                NewChild.ChildHandles.SettingTab);
        end
        
        % Function Callbacks for Ok and cancel buttons
        function btnOk_Callback(childWindow,~,~, myParent)
            btnOkCallback(childWindow,myParent);
        end
        function btnCancel_Callback(childWindow,~,~, myParent)
            RemoveFromOpenedWindowsList(myParent,childWindow);
            closeChild(childWindow);
        end
    end
end

