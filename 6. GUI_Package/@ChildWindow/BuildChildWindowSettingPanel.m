function BuildChildWindowSettingPanel...
        (childWindow,parentWindow)
    % This function builds the UI elements of the setting panel of child
    % windows. First all UI components are defined and then placed in the
    % setting window based on the type of current child window.
    
    parentHandle = parentWindow.ParentHandles;
    childHandle = childWindow.ChildHandles;
        
    fontName = parentHandle.FontName;
    fontSize = parentHandle.FontSize;
    
    [ myOpticalSystem,umSaved] = ...
        parentWindow.getCurrentOpticalSystem;
    
    nSurface = getNumberOfSurfaces(myOpticalSystem);
    nField = getNumberOfFieldPoints(myOpticalSystem);
    nWavelength = getNumberOfWavelengths(myOpticalSystem);
    AllSurfaceIndices = [num2cell(1:nSurface)];
    % min and max wavelengths are assumed to be in um
    minWavelengthInUm = getMinimumWavelength(myOpticalSystem)/10^-6;
    maxWavelengthInUm = getMaximumWavelength(myOpticalSystem)/10^-6;
    primaryWavelengthInUm = getPrimaryWavelength(myOpticalSystem)/10^-6;
    
    primaryWavelengthIndex = myOpticalSystem.PrimaryWavelengthIndex;
    
    % Group Similar windows
    coatingPropertyVsWavelength = ...
        {  'coatingDiattenuationVsWavelength',...
        'coatingReflectionVsWavelength',...
        'coatingRetardanceVsWavelength',...
        'coatingTransmissionVsWavelength'};
    
    coatingPropertyVsAngle = ...
        {   'coatingDiattenuationVsAngle',...
        'coatingReflectionVsAngle',...
        'coatingRetardanceVsAngle',...
        'coatingTransmissionVsAngle'};
    
    gridRaytraceAnalysis = ...
        {'amplitudeTransmissionMap',...
        'phaseMap',...
        'wavefrontDiattenuationMap',...
        'wavefrontRetardanceMap',...
        'wavefrontAtExitPupil',...
        'polarizationEllipseMap',...
        'FFTPSF'};
    
    rayTracingAnalysis = ...
        {'scalarRayTrace',...
        'polarizationRayTrace'};
    
    % Uncatagorized
    others = ...
        { 'coatingRefractiveIndexProfile',...
        'footprintDiagram',...
        'system2DLayoutDiagram',...
        'system3DLayoutDiagram',...
        'paraxialAnalysis',...
        'pupilApodization',...
        'transverseRayAberration',...
        'KostenbauderMatrix',...        % pulse analysis
        'GDDVsWavelength',...
        'SpatialChirpVsWavelength',...
        'AngularDispersionVsWavelength',...
        'GaussianPulsePropagation',...
        'PulseFrontEvolutionGeometric',...
        'FFTFocusedPulse'};
    %--------------------------------------------------------------------------
    % Define all UI components and save the workspace in to temp .mat file
    % childWindow.DefineAllChildWindowsSettingPanelComponents(parentWindow);
    % % load all UI components and delete the temp .mat file
    % load('tempSettingComponents');
    % % ('tempSettingComponents.mat');
    %
    
    lblSurfaceIndex = uicontrol( ...
        'Tag', 'lblSurfaceIndex', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Surface Index');
    
    popSurfaceIndex = uicontrol( ...
        'Tag', 'popApertureType', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'popupmenu', ...
        'BackgroundColor', [1 1 1], ...
        'String', AllSurfaceIndices,...
        'Value',nSurface);
    
    lblCoatingName = uicontrol( ...
        'Tag', 'lblCoatingName', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Coating Name');
    
    txtCoatingName = uicontrol( ...
        'Tag', 'txtCoatingName', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'BackgroundColor', [1 1 1], ...
        'String', 'None', ...
        'Enable','Off',...
        'HorizontalAlignment', 'left');
    % ------------------------------------------------------------
    lblWavelengthIndex = uicontrol( ...
        'Tag', 'lblWavelengthIndex', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Wavelength Index');
    
    popWavelengthIndex = uicontrol( ...
        'Tag', 'popWavelengthIndex', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'popupmenu', ...
        'BackgroundColor', [1 1 1], ...
        'String', [num2cell(1:nWavelength)],...
        'Value',primaryWavelengthIndex);
    
    lblWavelength = uicontrol( ...
        'Tag', 'lblWavelength', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Wavelength (um)');
    
    txtWavelength = uicontrol( ...
        'Tag', 'txtWavelength', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'BackgroundColor', [1 1 1], ...
        'String', primaryWavelengthInUm, ...
        'HorizontalAlignment', 'left');
    
    
    lblMinAngle = uicontrol( ...
        'Tag', 'lblMinAngle', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Min Angle (deg)');
    
    txtMinAngle = uicontrol( ...
        'Tag', 'txtMinAngle', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'BackgroundColor', [1 1 1], ...
        'String', '0', ...
        'HorizontalAlignment', 'left');
    lblMaxAngle = uicontrol( ...
        'Tag', 'lblMaxAngle', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Max Angle (deg)');
    
    txtMaxAngle = uicontrol( ...
        'Tag', 'txtMaxAngle', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'BackgroundColor', [1 1 1], ...
        'String', '90', ...
        'HorizontalAlignment', 'left');
    lblAngleStep = uicontrol( ...
        'Tag', 'lblAngleStep', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Angle Step (deg)');
    
    txtAngleStep = uicontrol( ...
        'Tag', 'txtAngleStep', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'BackgroundColor', [1 1 1], ...
        'String', '0.1', ...
        'HorizontalAlignment', 'left');
    % ------------------------------------------------------------
    lblFieldIndex = uicontrol( ...
        'Tag', 'lblFieldIndex', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Field Index');
    
    popFieldIndex = uicontrol( ...
        'Tag', 'popFieldIndex', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'popupmenu', ...
        'BackgroundColor', [1 1 1], ...
        'String', [num2cell(1:nField)],...
        'Value',1);
    
    lblIncidenceAngle = uicontrol( ...
        'Tag', 'lblIncidenceAngle', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Incidence Angle (deg)');
    
    txtIncidenceAngle = uicontrol( ...
        'Tag', 'txtIncidenceAngle', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'BackgroundColor', [1 1 1], ...
        'String', '0', ...
        'HorizontalAlignment', 'left');
    
    
    lblMinWavelength = uicontrol( ...
        'Tag', 'lblMinWavelength', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Min Wavelen(um)');
    
    txtMinWavelength = uicontrol( ...
        'Tag', 'txtMinWavelength', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'BackgroundColor', [1 1 1], ...
        'String', num2str(minWavelengthInUm), ...
        'HorizontalAlignment', 'left');
    lblMaxWavelength = uicontrol( ...
        'Tag', 'lblMaxWavelength', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Max Wavelen(um)');
    
    txtMaxWavelength = uicontrol( ...
        'Tag', 'txtMaxWavelength', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'BackgroundColor', [1 1 1], ...
        'String', num2str(maxWavelengthInUm), ...
        'HorizontalAlignment', 'left');
    lblWavelengthStep = uicontrol( ...
        'Tag', 'lblWavelengthStep', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Wavelength Step (um)');
    
    txtWavelengthStep = uicontrol( ...
        'Tag', 'txtWavelengthStep', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'BackgroundColor', [1 1 1], ...
        'String', '0.01', ...
        'HorizontalAlignment', 'left');
    %--------------------------------------------------------------
    lblPupilGridSize = uicontrol( ...
        'Tag', 'lblPupilGridSize', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Pupil GridSize');
    
    popPupilGridSize = uicontrol( ...
        'Tag', 'popFieldIndex', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'popupmenu', ...
        'BackgroundColor', [1 1 1], ...
        'String', {'4x4','8x8','16x16','32x32','64x64','128x128',...
        '256x256','512x512','1024x1024','2048x2048'},...
        'Value',4);
    %--------------------------------------------------------------
    lblZernikeCoefficientNumber = uicontrol( ...
        'Tag', 'lblZernikeCoefficientNumber', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Zernike Coeff.');
    popZernikeCoefficientNumber = uicontrol( ...
        'Tag', 'popZernikeCoefficientNumber', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'popupmenu', ...
        'BackgroundColor', [1 1 1], ...
        'String', {'9', '16', '25', '36', '49', '64'},...
        'Value',1);
    
    %--------------------------------------------------------------
    
    % ----- Polarization Parameters ----------------------------------
    % Define two uipanels panelPolarizationParametersTop and panelPolarizationParametersBottom
    % The panelPolarizationParametersBottom is child of panelPolarizationParametersTop
    % and so the panelPolarizationParametersTop is visible and the
    % panelPolarizationParametersBottom can be of any length depending on the
    % number of polarization parameters used.
    
    % Panel with fixed size is used as window visible while using the
    % slider to scroll through the uicontrols.
    panelPolarizationParametersTop = uipanel( ...
        'Tag', 'panelPolarizationParametersTop', ...
        'Units','Normalized',...
        'Position',[0.02,0.1,0.9,0.8],...
        'FontSize',fontSize,...
        'FontName',fontName,...
        'Title','Polarization Parameters',...
        'Visible','off');%,...
    
    panelPolarizationParametersBottom = uipanel( ...
        'Parent', panelPolarizationParametersTop, ...
        'Tag', 'panelPolarizationParameters', ...
        'Units','Normalized',...
        'Position',[0.0,-4.2,0.95,5],...%[0.0,-4,0.95,5],
        'FontSize',fontSize,...
        'FontName',fontName);%,...
    
    sliderPolarizationParameters = uicontrol('Style','Slider',...
        'Parent', panelPolarizationParametersTop,...
        'Units','normalized','Position',[0.95 0.0 0.05 1.0],...
        'Value',1);
    % -----------------------------------------------------------------
    
    lblPolarizationProfile = uicontrol( ...
        'Parent', panelPolarizationParametersTop, ...
        'Tag', 'lblPolarizationProfile', ...
        'Style', 'text', ...
        'HorizontalAlignment','right',...
        'Units','Normalized',...
        'Position', [0.02,0.90,0.40,0.075], ...
        'FontSize',fontSize,...
        'FontName',fontName,...
        'Visible','off',...
        'String', 'Polarization Profile');
    
    polarizationProfileList = GetSupportedPolarizationProfiles;
    popPolarizationProfile = uicontrol( ...
        'Parent', panelPolarizationParametersTop, ...
        'Tag', 'popSpatialProfile', ...
        'Style', 'popupmenu', ...
        'HorizontalAlignment','left',...
        'Units','Normalized',...
        'Position', [0.45,0.90,0.45,0.075], ...
        'BackgroundColor', [1 1 1], ...
        'String', polarizationProfileList, ...
        'Value',1,...
        'Visible','off',...
        'FontSize',fontSize,'FontName',fontName);
    
    
    %--------------------------------------------------------------
    lblNumberOfRay = uicontrol( ...
        'Tag', 'lblNumberOfRay', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Number Of Ray');
    txtNumberOfRay1 = uicontrol( ...
        'Tag', 'txtNumberOfRay1', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'BackgroundColor', [1 1 1], ...
        'String', '3', ...
        'HorizontalAlignment', 'left');
    txtNumberOfRay2 = uicontrol( ...
        'Tag', 'txtNumberOfRay2', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'BackgroundColor', [1 1 1], ...
        'String', '3', ...
        'HorizontalAlignment', 'left');
    lblPupilSamplingType = uicontrol( ...
        'Tag', 'lblPupilSamplingType', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Sampling Type');
    popPupilSamplingType = uicontrol( ...
        'Tag', 'popPupilSamplingType', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'popupmenu', ...
        'BackgroundColor', [1 1 1], ...
        'String', {'Cartesian','Polar',...
        'Tangential','Sagittal','Cross','Random'},...
        'Value',1);
    %--------------------------------------------------------------
    chkCheifAndMariginalRay = uicontrol( ...
        'Tag', 'chkCheifAndMariginalRay', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'checkbox', ...
        'String', 'Cheif And Mariginal Ray Only',...
        'Value',0);
    %-----------------------------------------------------------------------
    chkShowTotalNumberOfSurfaces = uicontrol( ...
        'Tag', 'chkShowTotalNumberOfSurfaces', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'checkbox', ...
        'String', 'Total Number Of Surfaces',...
        'Value',0);
    chkShowStopSurfaceIndex = uicontrol( ...
        'Tag', 'chkShowStopSurfaceIndex', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'checkbox', ...
        'String', 'Stop Surface Index',...
        'Value',0);
    chkShowSystemTotalTrack = uicontrol( ...
        'Tag', 'chkShowSystemTotalTrack', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'checkbox', ...
        'String', 'System Total Track',...
        'Value',0);
    chkShowEffectiveFocalLength = uicontrol( ...
        'Tag', 'chkShowEffectiveFocalLength', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'checkbox', ...
        'String', 'Effective Focal Length',...
        'Value',0);
    chkShowBackFocalLength = uicontrol( ...
        'Tag', 'chkShowBackFocalLength', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'checkbox', ...
        'String', 'Back Focal Length',...
        'Value',0);
    chkShowAngularMagnification = uicontrol( ...
        'Tag', 'chkShowAngularMagnification', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'checkbox', ...
        'String', 'Angular Magnification',...
        'Value',0);
    chkShowEntrancePupilDiameter = uicontrol( ...
        'Tag', 'chkShowEntrancePupilDiameter', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'checkbox', ...
        'String', 'Entrance Pupil Diameter',...
        'Value',0);
    chkShowEntrancePupilLocation = uicontrol( ...
        'Tag', 'chkShowEntrancePupilLocation', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'checkbox', ...
        'String', 'Entrance Pupil Location',...
        'Value',0);
    chkShowExitPupilDiameter = uicontrol( ...
        'Tag', 'chkShowExitPupilDiameter', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'checkbox', ...
        'String', 'Exit Pupil Diameter',...
        'Value',0);
    chkShowExitPupilLocation = uicontrol( ...
        'Tag', 'chkShowExitPupilLocation', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'checkbox', ...
        'String', 'Exit Pupil Location',...
        'Value',0);
    chkShowObjectSpaceNA = uicontrol( ...
        'Tag', 'chkShowObjectSpaceNA', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'checkbox', ...
        'String', 'Object Space NA',...
        'Value',0);
    chkShowImageSpaceNA = uicontrol( ...
        'Tag', 'chkShowImageSpaceNA', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'checkbox', ...
        'String', 'Image Space NA',...
        'Value',0);
    %-----------------------------------------------------------------------
    %-------------------------------------------------------------------------
    lblApodizationType = uicontrol( ...
        'Tag', 'lblApodApodizationType', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Apodization Type',...
        'HorizontalAlignment', 'left',...
        'Visible','off');
    popApodizationType = uicontrol( ...
        'Tag', 'popApodizationType', ...
        'Style', 'popupmenu', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...,...
        'Visible','off',...
        'BackgroundColor', [1 1 1], ...
        'String', {'None','Super Gaussian'});
    
    panelSuperGaussParameters = uipanel(...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'BorderType','line','BorderWidth',0.1,...
        'Visible','Off');
    
    lblApodMaximumIntensity = uicontrol( ...
        'Tag', 'lblApodMaximumIntensity', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Maximum Intensity', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    txtApodMaximumIntensity = uicontrol( ...
        'Tag', 'txtApodMaximumIntensity', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Units', 'normalized', ...
        'String', '1', ...
        'BackgroundColor', [1 1 1], ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    
    lblApodOrder = uicontrol( ...
        'Tag', 'lblApodOrder', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Order', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    txtApodOrder = uicontrol( ...
        'Tag', 'txtApodOrder', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'BackgroundColor', [1 1 1], ...
        'String', '1', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    lblApodBeamRadius = uicontrol( ...
        'Tag', 'lblApodBeamRadius', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Beam Radius', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    txtApodBeamRadius = uicontrol( ...
        'Tag', 'txtApodBeamRadius', ...
        'Style', 'edit', ...
        'BackgroundColor', [1 1 1], ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', '1', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    chkCurrentApodization = uicontrol( ...
        'Tag', 'chkCurrentApodization', ...
        'Style', 'checkbox', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Value', 0, ...
        'String','Current Apodization',...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    %-----------------------------------------------------------------------
    lblPSFPlotRadius  = uicontrol(...
        'Tag', 'lblPSFPlotRadius', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'PSF Plot Radius', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    txtPSFPlotRadius  = uicontrol(...
        'Tag', 'txtPSFPlotRadius', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', '0.1', ...
        'BackgroundColor', [1 1 1], ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    %-----------------------------------------------------------------------
    chkShowInTabular = uicontrol( ...
        'Tag', 'chkShowInTabular', ...
        'Style', 'checkbox', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Value', 0, ...
        'String','Show in Tabular',...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    %-----------------------------------------------------------------------
    
    chkFieldComponent = uicontrol( ...
        'Tag', 'chkFieldComponent', ...
        'Style', 'checkbox', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Value', 0, ...
        'String','Polarized',...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    
    popFieldComponent = uicontrol( ...
        'Tag', 'popFieldComponent', ...
        'Style', 'popupmenu', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...,...
        'Visible','off',...
        'BackgroundColor', [1 1 1], ...
        'String', {'Ex','Ey','Ez','Ex+Ey+Ez'});
    %-----------------------------------------------------------------------
    lblHx  = uicontrol(...
        'Tag', 'lblHx', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Hx (Normalized)', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    txtHx  = uicontrol(...
        'Tag', 'txtHx', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', '0', ...
        'BackgroundColor', [1 1 1], ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    lblHy  = uicontrol(...
        'Tag', 'lblHy', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Hy (Normalized)', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    txtHy  = uicontrol(...
        'Tag', 'txtHy', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', '0', ...
        'BackgroundColor', [1 1 1], ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    lblPx  = uicontrol(...
        'Tag', 'lblPx', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Px (Normalized)', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    txtPx  = uicontrol(...
        'Tag', 'txtPx', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', '0', ...
        'BackgroundColor', [1 1 1], ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    lblPy  = uicontrol(...
        'Tag', 'lblPy', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Py (Normalized)', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    txtPy  = uicontrol(...
        'Tag', 'txtPy', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', '1', ...
        'BackgroundColor', [1 1 1], ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    
    % ------------------------------------------------------------
    lblTangetialAberration = uicontrol( ...
        'Tag', 'lblTangetialAberration', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Tangetial');
    
    popTangentialAberration = uicontrol( ...
        'Tag', 'popTangentialAberration', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'popupmenu', ...
        'BackgroundColor', [1 1 1], ...
        'String', {'X Aberration','Y Aberration'},...
        'Value',2);
    % ------------------------------------------------------------
    lblSagittalAberration = uicontrol( ...
        'Tag', 'lblSagittalAberration', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Sagittal');
    
    popSagittalAberration = uicontrol( ...
        'Tag', 'popSagittalAberration', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'popupmenu', ...
        'BackgroundColor', [1 1 1], ...
        'String', {'X Aberration','Y Aberration'},...
        'Value',1);
    
    %----------------------------------------------------------------------
    % select start and end surfaces
    % ------------------------------------------------------------
    lblStartSurfaceIndex = uicontrol( ...
        'Tag', 'lblStartSurfaceIndex', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'Start Surface');
    
    popStartSurfaceIndex = uicontrol( ...
        'Tag', 'popStartSurfaceIndex', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'popupmenu', ...
        'BackgroundColor', [1 1 1], ...
        'String', AllSurfaceIndices,...
        'Value',1);
    
    chkStartSurfaceInclusive = uicontrol( ...
        'Tag', 'chkStartSurfaceInclusive', ...
        'Style', 'checkbox', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Value', 0, ...
        'String','Start Surface Inclusive',...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    % ------------------------------------------------------------
    lblEndSurfaceIndex = uicontrol( ...
        'Tag', 'lblEndSurfaceIndex', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'String', 'End Surface');
    
    popEndSurfaceIndex = uicontrol( ...
        'Tag', 'popEndSurfaceIndex', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'popupmenu', ...
        'BackgroundColor', [1 1 1], ...
        'String', AllSurfaceIndices,...
        'Value',nSurface);
    
    chkEndSurfaceInclusive = uicontrol( ...
        'Tag', 'chkEndSurfaceInclusive', ...
        'Style', 'checkbox', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Value', 1, ...
        'String','End Surface Inclusive',...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    % ------------------------------------------------------------
    % Gaussian pulsed beam parameter
    lblGaussianPulseTemporalWidth  = uicontrol(...
        'Tag', 'lblGaussianPulseTemporalWidth', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Temporal Width', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    txtGaussianPulseTemporalWidth  = uicontrol(...
        'Tag', 'txtGaussianPulseTemporalWidth', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', '25e-15', ...
        'BackgroundColor', [1 1 1], ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    
    lblGaussianPulseTemporalChirp  = uicontrol(...
        'Tag', 'lblGaussianPulseTemporalChirp', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Temporal Chirp', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    txtGaussianPulseTemporalChirp  = uicontrol(...
        'Tag', 'txtGaussianPulseTemporalChirp', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', '0', ...
        'BackgroundColor', [1 1 1], ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    
    % ------------------------------------------------------------
    lblGaussianPulseSpatialWidth  = uicontrol(...
        'Tag', 'lblGaussianPulseSpatialWidth', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Spatial Width', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    txtGaussianPulseSpatialWidth  = uicontrol(...
        'Tag', 'txtGaussianPulseSpatialWidth', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', '2', ...
        'BackgroundColor', [1 1 1], ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    
    lblGaussianPulseRadiusOfCurvature  = uicontrol(...
        'Tag', 'lblGaussianPulseRadiusOfCurvature', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Radius Of Curvature', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    txtGaussianPulseRadiusOfCurvature  = uicontrol(...
        'Tag', 'txtGaussianPulseRadiusOfCurvature', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Inf', ...
        'BackgroundColor', [1 1 1], ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    %---------------------------------------------------------------------
    lblOutputSpatialWindow   = uicontrol(...
        'Tag', 'lblOutputSpatialWindow', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Output Spatial Window', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    txtOutputSpatialWindow   = uicontrol(...
        'Tag', 'txtOutputSpatialWindow ', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Inf', ...
        'BackgroundColor', [1 1 1], ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    
    lblOutputTemporalWindow  = uicontrol(...
        'Tag', 'lblOutputTemporalWindow', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Output Temporal Window', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    txtOutputTemporalWindow  = uicontrol(...
        'Tag', 'txtOutputTemporalWindow', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Inf', ...
        'BackgroundColor', [1 1 1], ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    
    %------------------------------------------------------
    chk2DCrossSection = uicontrol( ...
        'Tag', 'chk2DCrossSection', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Visible','off',...
        'Style', 'checkbox', ...
        'String', '2D Cross Section',...
        'Value',0);
    
    %--------------------------------------------------------------
    lblStepVariable  = uicontrol(...
        'Tag', 'lblStepVariable', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Step Variable', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    popStepVariable  = uicontrol(...
        'Tag', 'popStepVariable', ...
        'Style', 'popupmenu', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', {'Z (in Lens Unit)','Time (in Sec)'}, ...
        'BackgroundColor', [1 1 1], ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    lblStepSize  = uicontrol(...
        'Tag', 'lblStepSize', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Step Size', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    txtStepSize  = uicontrol(...
        'Tag', 'txtStepSize', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', '1', ...
        'BackgroundColor', [1 1 1], ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    %------------------------------------
    lblNumberOfSteps  = uicontrol(...
        'Tag', 'lblNumberOfSteps', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', 'Number Of Steps', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    txtNumberOfSteps  = uicontrol(...
        'Tag', 'txtNumberOfSteps', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'String', '3', ...
        'BackgroundColor', [1 1 1], ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    
    %% Add any new uicontrol definitions here
    
    
    
    
    %%------------------------------------------------------------------------
    % Initialize the setting pannel by placing the UI components in the settign
    % window using switch case statements
    myName = childHandle.Name;
    switch lower(myName)
        case lower( coatingPropertyVsAngle)
            %-------------------------------------------------------
            set(lblCoatingName,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.53 0.85 0.15 0.09]);
            childHandle.lblCoatingName = lblCoatingName;
            set(txtCoatingName,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.73 0.88 0.25 0.07]);
            childHandle.txtCoatingName = txtCoatingName;
            
            set(lblSurfaceIndex,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.02 0.85 0.15 0.09]);
            childHandle.lblSurfaceIndex = lblSurfaceIndex;
            set(popSurfaceIndex,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'String',char(char(get(popSurfaceIndex,'String')),'New Coating'),...
                'Value',1,...
                'Position', [0.22 0.88 0.25 0.07]);
            childHandle.popSurfaceIndex = popSurfaceIndex;
            
            %-------------------------------------------------------
            set(lblWavelength,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.53 0.75 0.15 0.09]);
            childHandle.lblWavelength = lblWavelength;
            set(txtWavelength,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.73 0.78 0.25 0.07]);
            childHandle.txtWavelength = txtWavelength;
            
            set(lblWavelengthIndex,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.02 0.75 0.20 0.09]);
            childHandle.lblWavelengthIndex = lblWavelengthIndex;
            set(popWavelengthIndex,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'String',['New Wavelength';get(popWavelengthIndex,'String')],...
                'Position', [0.22 0.78 0.25 0.07],...
                'Value',primaryWavelengthIndex+1);
            childHandle.popWavelengthIndex = popWavelengthIndex;
            
            %-------------------------------------------------------
            set(lblMinAngle,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.02 0.65 0.15 0.09]);
            childHandle.lblMinAngle = lblMinAngle;
            set(txtMinAngle,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.22 0.68 0.25 0.07]);
            childHandle.txtMinAngle = txtMinAngle;
            
            set(lblMaxAngle,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.53 0.65 0.15 0.09]);
            childHandle.lblMaxAngle = lblMaxAngle;
            set(txtMaxAngle,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.73 0.68 0.25 0.07]);
            childHandle.txtMaxAngle = txtMaxAngle;
            %-------------------------------------------------------
            set(lblAngleStep,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.02 0.55 0.15 0.09]);
            childHandle.lblAngleStep = lblAngleStep;
            set(txtAngleStep,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.22 0.58 0.25 0.07]);
            childHandle.txtAngleStep = txtAngleStep;
            %% Set unique features of each windows in coating property vs angle
            switch lower(myName)
                case lower('coatingDiattenuationVsAngle')
                case lower('coatingReflectionVsAngle')
                case lower('coatingRetardanceVsAngle')
                case lower('coatingTransmissionVsAngle')
                    %% Add case statements for new windows in the
                    % "coatingPropertyVsAngle" category here
                    %%
            end
            
        case lower( coatingPropertyVsWavelength)
            %-------------------------------------------------------
            
            set(lblCoatingName,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.53 0.85 0.15 0.09]);
            childHandle.lblCoatingName = lblCoatingName;
            set(txtCoatingName,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.73 0.88 0.25 0.07]);
            childHandle.txtCoatingName = txtCoatingName;
            
            set(lblSurfaceIndex,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.02 0.85 0.15 0.09]);
            childHandle.lblSurfaceIndex = lblSurfaceIndex;
            set(popSurfaceIndex,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'String',char(char(get(popSurfaceIndex,'String')),'New Coating'),...
                'Value',1,...
                'Position', [0.22 0.88 0.25 0.07]);
            childHandle.popSurfaceIndex = popSurfaceIndex;
            
            %-------------------------------------------------------
            set(lblMinWavelength,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.02 0.75 0.15 0.09]);
            childHandle.lblMinWavelength = lblMinWavelength;
            set(txtMinWavelength,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.22 0.78 0.25 0.07]);
            childHandle.txtMinWavelength = txtMinWavelength;
            
            set(lblMaxWavelength,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.53 0.75 0.15 0.09]);
            childHandle.lblMaxWavelength = lblMaxWavelength;
            set(txtMaxWavelength,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.73 0.78 0.25 0.07]);
            childHandle.txtMaxWavelength = txtMaxWavelength;
            %-------------------------------------------------------
            set(lblWavelengthStep,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.02 0.65 0.15 0.09]);
            childHandle.lblWavelengthStep = lblWavelengthStep;
            set(txtWavelengthStep,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.22 0.68 0.25 0.07]);
            childHandle.txtWavelengthStep = txtWavelengthStep;
            %------------------------------------------------------------------
            set(lblIncidenceAngle,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.53 0.65 0.15 0.09]);
            childHandle.lblIncidenceAngle = lblIncidenceAngle;
            set(txtIncidenceAngle,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.73 0.68 0.25 0.07]);
            childHandle.txtIncidenceAngle = txtIncidenceAngle;
            
            %% Set unique features of each windows in coating property vs wavelen
            switch lower(myName)
                case lower('coatingDiattenuationVsWavelength')
                case lower('coatingReflectionVsWavelength')
                case lower('coatingRetardanceVsWavelength')
                case lower('coatingTransmissionVsWavelength')
                    
                    %% Add case statements for new windows in the
                    % "coatingPropertyVsWavelength" category here
                    %%
            end
        case lower(gridRaytraceAnalysis)
            set(lblSurfaceIndex,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.02 0.85 0.15 0.09]);
            childHandle.lblSurfaceIndex = lblSurfaceIndex;
            set(popSurfaceIndex,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.22 0.88 0.25 0.07]);
            childHandle.popSurfaceIndex = popSurfaceIndex;
            childHandle.txtCoatingName = txtCoatingName;
            
            set(lblWavelengthIndex,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.53 0.85 0.20 0.09]);
            childHandle.lblWavelengthIndex = lblWavelengthIndex;
            set(popWavelengthIndex,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.73 0.88 0.25 0.07]);
            childHandle.popWavelengthIndex = popWavelengthIndex;
            
            childHandle.txtWavelength = txtWavelength;
            %------------------------------------------------------
            set(lblFieldIndex,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.02 0.75 0.20 0.09]);
            childHandle.lblFieldIndex = lblFieldIndex;
            set(popFieldIndex,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.22 0.78 0.25 0.07]);
            childHandle.popFieldIndex = popFieldIndex;
            
            set(lblPupilGridSize,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.53 0.75 0.20 0.09]);
            childHandle.lblPupilGridSize = lblPupilGridSize;
            set(popPupilGridSize,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.73 0.78 0.25 0.07]);
            childHandle.popPupilGridSize = popPupilGridSize;
            %--------------------------------------------------------------
            
            %% Set specific unique elements for each members
            switch lower(myName)
                case lower('amplitudeTransmissionMap')
                case lower('phaseMap')
                case lower('wavefrontDiattenuationMap')
                case lower('wavefrontRetardanceMap')
                case lower('polarizationEllipseMap')
                    %------------------------------------------------------
                    % ----- Polarization Parameters ----------------------------------
                    set(panelPolarizationParametersTop,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'Normalized', ...
                        'BorderType','etchedin',...
                        'Visible','on',...
                        'Position', [0.25 0.2 0.5 0.35]);
                    set(get(panelPolarizationParametersTop,'Children'),'Visible','on');
                    childHandle.panelPolarizationParametersBottom = panelPolarizationParametersBottom;
                    childHandle.panelPolarizationParametersTop = panelPolarizationParametersTop;
                    childHandle.sliderPolarizationParameters = sliderPolarizationParameters;
                    childHandle.lblPolarizationProfile = lblPolarizationProfile;
                    childHandle.popPolarizationProfile = popPolarizationProfile;
                    polarizationProfileList = GetSupportedPolarizationProfiles;
                    firstPolarizationProfileType = polarizationProfileList{1};
                    childHandle = displayPolarizationProfileParameters(childHandle,firstPolarizationProfileType);
                case lower('wavefrontAtExitPupil')
                    % Disable surface index pop
                    set(childHandle.popSurfaceIndex,'Enable','off');
                    % Add and Show zernike coefiicient number popup
                    set(lblZernikeCoefficientNumber,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.65 0.20 0.09]);
                    childHandle.lblZernikeCoefficientNumber = lblZernikeCoefficientNumber;
                    set(popZernikeCoefficientNumber,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.22 0.68 0.25 0.07]);
                    childHandle.popZernikeCoefficientNumber = popZernikeCoefficientNumber;
                    
                    % Disable surface index pop
                    set(childHandle.popSurfaceIndex,'Enable','off');
                case lower('FFTPSF')
                    % Add the PSF plot radius
                    set(lblPSFPlotRadius,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.65 0.15 0.09]);
                    childHandle.lblPSFPlotRadius = lblPSFPlotRadius;
                    set(txtPSFPlotRadius,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.22 0.68 0.25 0.07]);
                    childHandle.txtPSFPlotRadius = txtPSFPlotRadius;
                    %
                    % Disable surface index pop
                    set(childHandle.popSurfaceIndex,'Enable','off');
                    %% Add case statements for new windows in the
                    % "gridrayTraceAnalysis" category here
                    %%
                    
            end
        case lower(rayTracingAnalysis)
            set(lblHx,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.02 0.85 0.20 0.09]);
            childHandle.lblHx = lblHx;
            set(txtHx,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.27 0.88 0.20 0.06]);
            childHandle.txtHx = txtHx;
            
            set(lblHy,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.53 0.85 0.20 0.09]);
            childHandle.lblHy = lblHy;
            set(txtHy,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.78 0.88 0.20 0.06]);
            childHandle.txtHy = txtHy;
            
            %------------------------------------------------------
            set(lblPx,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.02 0.75 0.20 0.09]);
            childHandle.lblPx = lblPx;
            set(txtPx,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.27 0.78 0.20 0.06]);
            childHandle.txtPx = txtPx;
            
            set(lblPy,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.53 0.75 0.20 0.09]);
            childHandle.lblPy = lblPy;
            set(txtPy,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.78 0.78 0.20 0.06]);
            childHandle.txtPy = txtPy;
            
            %-------------------------------------------------------
            set(lblWavelengthIndex,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.02 0.65 0.20 0.09]);
            childHandle.lblWavelengthIndex = lblWavelengthIndex;
            set(popWavelengthIndex,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'String',['New Wavelength';get(popWavelengthIndex,'String')],...
                'Position', [0.27 0.67 0.20 0.07],...
                'Value',primaryWavelengthIndex+1);
            childHandle.popWavelengthIndex = popWavelengthIndex;
            set(lblWavelength,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.53 0.64 0.20 0.09]);
            childHandle.lblWavelength = lblWavelength;
            set(txtWavelength,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Position', [0.78 0.68 0.20 0.06]);
            childHandle.txtWavelength = txtWavelength;
            %-----------------------------------------------------------------
            set(chkShowInTabular,...
                'Parent', childHandle.SettingTab, ...
                'Units', 'normalized', ...
                'Visible','on',...
                'Value',0,...
                'Position', [0.02 0.55 0.40 0.09]);
            childHandle.chkShowInTabular = chkShowInTabular;
            
            switch lower(myName)
                case lower('scalarRayTrace')
                    
                case lower('polarizationRayTrace')
                    set(childHandle.chkShowInTabular,'Enable','off');
                    % ----- Polarization Parameters ----------------------------------
                    set(panelPolarizationParametersTop,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'Normalized', ...
                        'BorderType','etchedin',...
                        'Visible','on',...
                        'Position', [0.25 0.2 0.5 0.35]);
                    set(get(panelPolarizationParametersTop,'Children'),'Visible','on');
                    childHandle.panelPolarizationParametersBottom = panelPolarizationParametersBottom;
                    childHandle.panelPolarizationParametersTop = panelPolarizationParametersTop;
                    childHandle.sliderPolarizationParameters = sliderPolarizationParameters;
                    childHandle.lblPolarizationProfile = lblPolarizationProfile;
                    childHandle.popPolarizationProfile = popPolarizationProfile;
                    polarizationProfileList = GetSupportedPolarizationProfiles;
                    firstPolarizationProfileType = polarizationProfileList{1};
                    childHandle = displayPolarizationProfileParameters(childHandle,firstPolarizationProfileType);
                    
                    %% Add case statements for new windows in the
                    % "rayTracingAnalysis" category here
                    %%
                    
            end
        case lower(others)
            switch lower(myName)
                case lower('paraxialAnalysis')
                    set(chkShowTotalNumberOfSurfaces,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Value',1,...
                        'Visible','on',...
                        'Position', [0.1 0.9 0.40 0.09]);
                    childHandle.chkShowTotalNumberOfSurfaces = chkShowTotalNumberOfSurfaces;
                    set(chkShowStopSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Value',1,...
                        'Visible','on',...
                        'Position', [0.1 0.8 0.40 0.09]);
                    childHandle.chkShowStopSurfaceIndex = chkShowStopSurfaceIndex;
                    set(chkShowSystemTotalTrack,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Value',1,...
                        'Visible','on',...
                        'Position', [0.1 0.7 0.40 0.09]);
                    childHandle.chkShowSystemTotalTrack = chkShowSystemTotalTrack;
                    set(chkShowEffectiveFocalLength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Value',1,...
                        'Visible','on',...
                        'Position', [0.1 0.6 0.40 0.09]);
                    childHandle.chkShowEffectiveFocalLength = chkShowEffectiveFocalLength;
                    set(chkShowBackFocalLength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Value',1,...
                        'Visible','on',...
                        'Position', [0.1 0.5 0.40 0.09]);
                    childHandle.chkShowBackFocalLength = chkShowBackFocalLength;
                    set(chkShowAngularMagnification,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Value',1,...
                        'Visible','on',...
                        'Position', [0.1 0.4 0.40 0.09]);
                    childHandle.chkShowAngularMagnification = chkShowAngularMagnification;
                    set(chkShowEntrancePupilDiameter,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Value',1,...
                        'Visible','on',...
                        'Position', [0.1 0.3 0.40 0.09]);
                    childHandle.chkShowEntrancePupilDiameter = chkShowEntrancePupilDiameter;
                    set(chkShowEntrancePupilLocation,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Value',1,...
                        'Visible','on',...
                        'Position', [0.1 0.2 0.40 0.09]);
                    childHandle.chkShowEntrancePupilLocation = chkShowEntrancePupilLocation;
                    set(chkShowExitPupilDiameter,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Value',1,...
                        'Visible','on',...
                        'Position', [0.5 0.9 0.40 0.09]);
                    childHandle.chkShowExitPupilDiameter = chkShowExitPupilDiameter;
                    set(chkShowExitPupilLocation,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Value',1,...
                        'Visible','on',...
                        'Position', [0.5 0.8 0.40 0.09]);
                    childHandle.chkShowExitPupilLocation = chkShowExitPupilLocation;
                    set(chkShowObjectSpaceNA,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Value',1,...
                        'Visible','on',...
                        'Position', [0.5 0.7 0.40 0.09]);
                    childHandle.chkShowObjectSpaceNA = chkShowObjectSpaceNA;
                    set(chkShowImageSpaceNA,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Value',1,...
                        'Visible','on',...
                        'Position', [0.5 0.6 0.40 0.09]);
                    childHandle.chkShowImageSpaceNA = chkShowImageSpaceNA;
                case lower('coatingRefractiveIndexProfile')
                    
                    set(lblCoatingName,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.1 0.63 0.25 0.09]);
                    childHandle.lblCoatingName = lblCoatingName;
                    set(txtCoatingName,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.35 0.65 0.5 0.07]);
                    childHandle.txtCoatingName = txtCoatingName;
                    
                    set(lblSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.1 0.77 0.25 0.09]);
                    childHandle.lblSurfaceIndex = lblSurfaceIndex;
                    set(popSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'String',char(char(get(popSurfaceIndex,'String')),'New Coating'),...
                        'Position', [0.35 0.8 0.5 0.07]);
                    childHandle.popSurfaceIndex = popSurfaceIndex;
                    
                    %==================================================
                case lower( 'footprintDiagram')
                    set(lblSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.85 0.15 0.09]);
                    childHandle.lblSurfaceIndex = lblSurfaceIndex;
                    set(popSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.22 0.88 0.25 0.07]);
                    childHandle.popSurfaceIndex = popSurfaceIndex;
                    childHandle.txtCoatingName = txtCoatingName;
                    
                    set(lblWavelengthIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.85 0.20 0.09]);
                    childHandle.lblWavelengthIndex = lblWavelengthIndex;
                    set(popWavelengthIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'String',['All';get(popWavelengthIndex,'String')],...
                        'Position', [0.73 0.88 0.25 0.07],...
                        'Value',primaryWavelengthIndex+1);
                    childHandle.popWavelengthIndex = popWavelengthIndex;
                    
                    childHandle.txtWavelength = txtWavelength;
                    %------------------------------------------------------
                    set(lblFieldIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.75 0.20 0.09]);
                    childHandle.lblFieldIndex = lblFieldIndex;
                    set(popFieldIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'String',['All';get(popFieldIndex,'String')],...
                        'Position', [0.22 0.78 0.25 0.07]);
                    childHandle.popFieldIndex = popFieldIndex;
                    
                    set(lblNumberOfRay,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.75 0.20 0.09]);
                    childHandle.lblNumberOfRay = lblNumberOfRay;
                    set(txtNumberOfRay1,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.73 0.78 0.12 0.07]);
                    childHandle.txtNumberOfRay1 = txtNumberOfRay1;
                    set(txtNumberOfRay2,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.85 0.78 0.12 0.07]);
                    childHandle.txtNumberOfRay2 = txtNumberOfRay2;
                    % ----------------------------------------------------
                    set(lblPupilSamplingType,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.65 0.20 0.09]);
                    childHandle.lblPupilSamplingType = lblPupilSamplingType;
                    set(popPupilSamplingType,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.22 0.68 0.25 0.07]);
                    childHandle.popPupilSamplingType = popPupilSamplingType;
                case lower( 'system2DLayoutDiagram')
                    set(lblFieldIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.85 0.15 0.09]);
                    childHandle.lblFieldIndex = lblFieldIndex;
                    
                    set(popFieldIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'String',['All';get(popFieldIndex,'String')],...
                        'Position', [0.22 0.88 0.25 0.07]);
                    childHandle.popFieldIndex = popFieldIndex;
                    
                    set(lblWavelengthIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.85 0.20 0.09]);
                    childHandle.lblWavelengthIndex = lblWavelengthIndex;
                    set(popWavelengthIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'String',['All';get(popWavelengthIndex,'String')],...
                        'Position', [0.73 0.88 0.25 0.07],...
                        'Value',primaryWavelengthIndex+1);
                    childHandle.popWavelengthIndex = popWavelengthIndex;
                    
                    childHandle.txtWavelength = txtWavelength;
                    %------------------------------------------------------
                    set(lblNumberOfRay,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.75 0.20 0.09]);
                    childHandle.lblNumberOfRay = lblNumberOfRay;
                    
                    set(txtNumberOfRay1,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.22 0.78 0.12 0.07]);
                    childHandle.txtNumberOfRay1 = txtNumberOfRay1;
                    set(txtNumberOfRay2,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.34 0.78 0.12 0.07]);
                    childHandle.txtNumberOfRay2 = txtNumberOfRay2;
                    set(chkCheifAndMariginalRay,...
                        'Parent', childHandle.SettingTab, ...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.77 0.40 0.09]);
                    childHandle.chkCheifAndMariginalRay = chkCheifAndMariginalRay;
                case lower( 'system3DLayoutDiagram')
                    
                    set(lblFieldIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.85 0.15 0.09]);
                    childHandle.lblFieldIndex = lblFieldIndex;
                    set(popFieldIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'String',['All';get(popFieldIndex,'String')],...
                        'Position', [0.22 0.88 0.25 0.07]);
                    childHandle.popFieldIndex = popFieldIndex;
                    
                    set(lblWavelengthIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.85 0.20 0.09]);
                    childHandle.lblWavelengthIndex = lblWavelengthIndex;
                    set(popWavelengthIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'String',['All';get(popWavelengthIndex,'String')],...
                        'Position', [0.73 0.88 0.25 0.07],...
                        'Value',primaryWavelengthIndex+1);
                    childHandle.popWavelengthIndex = popWavelengthIndex;
                    
                    childHandle.txtWavelength = txtWavelength;
                    %------------------------------------------------------
                    set(lblNumberOfRay,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.75 0.20 0.09]);
                    childHandle.lblNumberOfRay = lblNumberOfRay;
                    
                    set(txtNumberOfRay1,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.22 0.78 0.12 0.07]);
                    childHandle.txtNumberOfRay1 = txtNumberOfRay1;
                    set(txtNumberOfRay2,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.34 0.78 0.12 0.07]);
                    childHandle.txtNumberOfRay2 = txtNumberOfRay2;
                    set(lblPupilSamplingType,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.75 0.20 0.09]);
                    childHandle.lblPupilSamplingType = lblPupilSamplingType;
                    set(popPupilSamplingType,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.73 0.78 0.25 0.07]);
                    childHandle.popPupilSamplingType = popPupilSamplingType;
                case lower('pupilApodization')
                    set(lblApodizationType,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.2 0.85 0.3 0.07]);
                    childHandle.lblApodizationType = lblApodizationType;
                    set(popApodizationType,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.5 0.85 0.3 0.07]);
                    childHandle.popApodizationType = popApodizationType;
                    
                    set(lblPupilGridSize,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.2 0.78 0.3 0.07]);
                    childHandle.lblPupilGridSize = lblPupilGridSize;
                    set(popPupilGridSize,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.5 0.78 0.3 0.07]);
                    childHandle.popPupilGridSize = popPupilGridSize;
                    
                    set(chkCurrentApodization,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.2 0.7 0.35 0.07]);
                    childHandle.chkCurrentApodization = chkCurrentApodization;
                    set(panelSuperGaussParameters,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','off',...
                        'Position', [0.1 0.25 0.8 0.45]);
                    childHandle.panelSuperGaussParameters = panelSuperGaussParameters;
                    set(lblApodMaximumIntensity,...
                        'Parent', childHandle.panelSuperGaussParameters, ...
                        'Units', 'normalized', ...
                        'Position', [0.1 0.8 0.4 0.1]);
                    childHandle.lblApodMaximumIntensity = lblApodMaximumIntensity;
                    set(txtApodMaximumIntensity,...
                        'Parent', childHandle.panelSuperGaussParameters, ...
                        'Units', 'normalized', ...
                        'Position', [0.5 0.8 0.4 0.1]);
                    childHandle.txtApodMaximumIntensity = txtApodMaximumIntensity;
                    set(lblApodOrder,...
                        'Parent', childHandle.panelSuperGaussParameters, ...
                        'Units', 'normalized', ...
                        'Position', [0.1 0.6 0.4 0.1]);
                    childHandle.lblApodOrder = lblApodOrder;
                    set(txtApodOrder,...
                        'Parent', childHandle.panelSuperGaussParameters, ...
                        'Units', 'normalized', ...
                        'Position', [0.5 0.6 0.4 0.1]);
                    childHandle.txtApodOrder = txtApodOrder;
                    set(lblApodBeamRadius,...
                        'Parent', childHandle.panelSuperGaussParameters, ...
                        'Units', 'normalized', ...
                        'Position', [0.1 0.4 0.4 0.1]);
                    childHandle.lblApodBeamRadius = lblApodBeamRadius;
                    set(txtApodBeamRadius,...
                        'Parent', childHandle.panelSuperGaussParameters, ...
                        'Units', 'normalized', ...
                        'Position', [0.5 0.4 0.4 0.1]);
                    childHandle.txtApodBeamRadius = txtApodBeamRadius;
                    
                case lower('transverseRayAberration')
                    set(lblSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.85 0.15 0.09]);
                    childHandle.lblSurfaceIndex = lblSurfaceIndex;
                    set(popSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.22 0.88 0.25 0.07]);
                    childHandle.popSurfaceIndex = popSurfaceIndex;
                    childHandle.txtCoatingName = txtCoatingName;
                    
                    set(lblWavelengthIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.85 0.20 0.09]);
                    childHandle.lblWavelengthIndex = lblWavelengthIndex;
                    set(popWavelengthIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'String',['All';get(popWavelengthIndex,'String')],...
                        'Position', [0.73 0.88 0.25 0.07],...
                        'Value',primaryWavelengthIndex+1);
                    childHandle.popWavelengthIndex = popWavelengthIndex;
                    
                    childHandle.txtWavelength = txtWavelength;
                    %------------------------------------------------------
                    set(lblFieldIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.75 0.20 0.09]);
                    childHandle.lblFieldIndex = lblFieldIndex;
                    set(popFieldIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'String',['All';get(popFieldIndex,'String')],...
                        'Position', [0.22 0.78 0.25 0.07]);
                    childHandle.popFieldIndex = popFieldIndex;
                    
                    set(lblNumberOfRay,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.75 0.20 0.09]);
                    childHandle.lblNumberOfRay = lblNumberOfRay;
                    set(txtNumberOfRay1,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.73 0.78 0.12 0.07]);
                    childHandle.txtNumberOfRay1 = txtNumberOfRay1;
                    set(txtNumberOfRay2,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.85 0.78 0.12 0.07]);
                    childHandle.txtNumberOfRay2 = txtNumberOfRay2;
                    % ----------------------------------------------------
                    set(lblSagittalAberration,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.65 0.20 0.09]);
                    childHandle.lblSagittalAberration = lblSagittalAberration;
                    set(popSagittalAberration,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.22 0.68 0.25 0.07]);
                    childHandle.popSagittalAberration = popSagittalAberration;
                    % ----------------------------------------------------
                    set(lblTangetialAberration,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.65 0.20 0.09]);
                    childHandle.lblTangetialAberration = lblTangetialAberration;
                    set(popTangentialAberration,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.73 0.68 0.25 0.07]);
                    childHandle.popTangentialAberration = popTangentialAberration;
                case lower('KostenbauderMatrix')
                    % Take pilot ray parameters
                    set(lblHx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.85 0.20 0.09]);
                    childHandle.lblHx = lblHx;
                    set(txtHx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.88 0.20 0.06],...
                        'string','0');
                    childHandle.txtHx = txtHx;
                    
                    set(lblHy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.85 0.20 0.09]);
                    childHandle.lblHy = lblHy;
                    set(txtHy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.88 0.20 0.06],...
                        'string','0');
                    childHandle.txtHy = txtHy;
                    
                    %------------------------------------------------------
                    set(lblPx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.75 0.20 0.09]);
                    childHandle.lblPx = lblPx;
                    set(txtPx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.78 0.20 0.06],...
                        'string','0');
                    childHandle.txtPx = txtPx;
                    
                    set(lblPy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.75 0.20 0.09]);
                    childHandle.lblPy = lblPy;
                    set(txtPy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.78 0.20 0.06],...
                        'string','0');
                    childHandle.txtPy = txtPy;
                    
                    %-------------------------------------------------------
                    set(lblWavelengthIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.65 0.20 0.09]);
                    childHandle.lblWavelengthIndex = lblWavelengthIndex;
                    set(popWavelengthIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'String',['New Wavelength';get(popWavelengthIndex,'String')],...
                        'Position', [0.27 0.67 0.20 0.07],...
                        'Value',primaryWavelengthIndex+1);
                    childHandle.popWavelengthIndex = popWavelengthIndex;
                    set(lblWavelength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.64 0.20 0.09]);
                    childHandle.lblWavelength = lblWavelength;
                    set(txtWavelength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.68 0.20 0.06]);
                    childHandle.txtWavelength = txtWavelength;
                    % Take the start and end surface indices
                    %-------------------------------------------------------
                    set(lblStartSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.55 0.20 0.09]);
                    childHandle.lblStartSurfaceIndex = lblStartSurfaceIndex;
                    set(popStartSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',... %'String',['New Wavelength';get(popEndSurfaceIndex,'String')],...
                        'Position', [0.27 0.57 0.20 0.07]);
                    childHandle.popStartSurfaceIndex = popStartSurfaceIndex;
                    set(chkStartSurfaceInclusive,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.57 0.40 0.09]);
                    childHandle.chkStartSurfaceInclusive = chkStartSurfaceInclusive;
                    %-------------------------------------------------------
                    set(lblEndSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.45 0.20 0.09]);
                    childHandle.lblEndSurfaceIndex = lblEndSurfaceIndex;
                    set(popEndSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',... %'String',['New Wavelength';get(popEndSurfaceIndex,'String')],...
                        'Position', [0.27 0.47 0.20 0.07]);
                    childHandle.popEndSurfaceIndex = popEndSurfaceIndex;
                    set(chkEndSurfaceInclusive,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.47 0.40 0.09]);
                    childHandle.chkEndSurfaceInclusive = chkEndSurfaceInclusive;
                    
                case lower('GDDVsWavelength')
                    % Take pilot ray parameters
                    set(lblHx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.85 0.20 0.09]);
                    childHandle.lblHx = lblHx;
                    set(txtHx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.88 0.20 0.06],...
                        'string','0');
                    childHandle.txtHx = txtHx;
                    
                    set(lblHy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.85 0.20 0.09]);
                    childHandle.lblHy = lblHy;
                    set(txtHy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.88 0.20 0.06],...
                        'string','0');
                    childHandle.txtHy = txtHy;
                    
                    %------------------------------------------------------
                    set(lblPx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.75 0.20 0.09]);
                    childHandle.lblPx = lblPx;
                    set(txtPx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.78 0.20 0.06],...
                        'string','0');
                    childHandle.txtPx = txtPx;
                    
                    set(lblPy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.75 0.20 0.09]);
                    childHandle.lblPy = lblPy;
                    set(txtPy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.78 0.20 0.06],...
                        'string','0');
                    childHandle.txtPy = txtPy;
                    %------------------------------------------------------
                    set(lblMinWavelength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.65 0.15 0.09]);
                    childHandle.lblMinWavelength = lblMinWavelength;
                    set(txtMinWavelength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.68 0.20 0.06]);
                    childHandle.txtMinWavelength = txtMinWavelength;
                    
                    set(lblMaxWavelength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.65 0.15 0.09]);
                    childHandle.lblMaxWavelength = lblMaxWavelength;
                    set(txtMaxWavelength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.68 0.20 0.06]);
                    childHandle.txtMaxWavelength = txtMaxWavelength;
                    %-------------------------------------------------------
                    set(lblWavelengthStep,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.55 0.15 0.09]);
                    childHandle.lblWavelengthStep = lblWavelengthStep;
                    set(txtWavelengthStep,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.58 0.20 0.06]);
                    childHandle.txtWavelengthStep = txtWavelengthStep;
                    %-------------------------------------------------------
                    
                    % Take the start and end surface indices
                    %-------------------------------------------------------
                    set(lblStartSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.45 0.20 0.09]);
                    childHandle.lblStartSurfaceIndex = lblStartSurfaceIndex;
                    set(popStartSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',... %'String',['New Wavelength';get(popEndSurfaceIndex,'String')],...
                        'Position', [0.27 0.47 0.20 0.07]);
                    childHandle.popStartSurfaceIndex = popStartSurfaceIndex;
                    set(chkStartSurfaceInclusive,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.47 0.40 0.09]);
                    childHandle.chkStartSurfaceInclusive = chkStartSurfaceInclusive;
                    %-------------------------------------------------------
                    set(lblEndSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.35 0.20 0.09]);
                    childHandle.lblEndSurfaceIndex = lblEndSurfaceIndex;
                    set(popEndSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',... %'String',['New Wavelength';get(popEndSurfaceIndex,'String')],...
                        'Position', [0.27 0.37 0.20 0.07]);
                    childHandle.popEndSurfaceIndex = popEndSurfaceIndex;
                    set(chkEndSurfaceInclusive,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.37 0.40 0.09]);
                    childHandle.chkEndSurfaceInclusive = chkEndSurfaceInclusive;
                    
                case lower('SpatialChirpVsWavelength')
                    % Take pilot ray parameters
                    set(lblHx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.85 0.20 0.09]);
                    childHandle.lblHx = lblHx;
                    set(txtHx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.88 0.20 0.06],...
                        'string','0');
                    childHandle.txtHx = txtHx;
                    
                    set(lblHy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.85 0.20 0.09]);
                    childHandle.lblHy = lblHy;
                    set(txtHy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.88 0.20 0.06],...
                        'string','0');
                    childHandle.txtHy = txtHy;
                    
                    %------------------------------------------------------
                    set(lblPx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.75 0.20 0.09]);
                    childHandle.lblPx = lblPx;
                    set(txtPx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.78 0.20 0.06],...
                        'string','0');
                    childHandle.txtPx = txtPx;
                    
                    set(lblPy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.75 0.20 0.09]);
                    childHandle.lblPy = lblPy;
                    set(txtPy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.78 0.20 0.06],...
                        'string','0');
                    childHandle.txtPy = txtPy;
                    %------------------------------------------------------
                    set(lblMinWavelength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.65 0.15 0.09]);
                    childHandle.lblMinWavelength = lblMinWavelength;
                    set(txtMinWavelength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.68 0.20 0.06]);
                    childHandle.txtMinWavelength = txtMinWavelength;
                    
                    set(lblMaxWavelength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.65 0.15 0.09]);
                    childHandle.lblMaxWavelength = lblMaxWavelength;
                    set(txtMaxWavelength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.68 0.20 0.06]);
                    childHandle.txtMaxWavelength = txtMaxWavelength;
                    %-------------------------------------------------------
                    set(lblWavelengthStep,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.55 0.15 0.09]);
                    childHandle.lblWavelengthStep = lblWavelengthStep;
                    set(txtWavelengthStep,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.58 0.20 0.06]);
                    childHandle.txtWavelengthStep = txtWavelengthStep;
                    %-------------------------------------------------------
                    
                    % Take the start and end surface indices
                    %-------------------------------------------------------
                    set(lblStartSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.45 0.20 0.09]);
                    childHandle.lblStartSurfaceIndex = lblStartSurfaceIndex;
                    set(popStartSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',... %'String',['New Wavelength';get(popEndSurfaceIndex,'String')],...
                        'Position', [0.27 0.47 0.20 0.07]);
                    childHandle.popStartSurfaceIndex = popStartSurfaceIndex;
                    set(chkStartSurfaceInclusive,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.47 0.40 0.09]);
                    childHandle.chkStartSurfaceInclusive = chkStartSurfaceInclusive;
                    %-------------------------------------------------------
                    set(lblEndSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.35 0.20 0.09]);
                    childHandle.lblEndSurfaceIndex = lblEndSurfaceIndex;
                    set(popEndSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',... %'String',['New Wavelength';get(popEndSurfaceIndex,'String')],...
                        'Position', [0.27 0.37 0.20 0.07]);
                    childHandle.popEndSurfaceIndex = popEndSurfaceIndex;
                    set(chkEndSurfaceInclusive,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.37 0.40 0.09]);
                    childHandle.chkEndSurfaceInclusive = chkEndSurfaceInclusive;
                    
                case lower('AngularDispersionVsWavelength')
                    % Take pilot ray parameters
                    set(lblHx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.85 0.20 0.09]);
                    childHandle.lblHx = lblHx;
                    set(txtHx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.88 0.20 0.06],...
                        'string','0');
                    childHandle.txtHx = txtHx;
                    
                    set(lblHy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.85 0.20 0.09]);
                    childHandle.lblHy = lblHy;
                    set(txtHy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.88 0.20 0.06],...
                        'string','0');
                    childHandle.txtHy = txtHy;
                    
                    %------------------------------------------------------
                    set(lblPx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.75 0.20 0.09]);
                    childHandle.lblPx = lblPx;
                    set(txtPx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.78 0.20 0.06],...
                        'string','0');
                    childHandle.txtPx = txtPx;
                    
                    set(lblPy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.75 0.20 0.09]);
                    childHandle.lblPy = lblPy;
                    set(txtPy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.78 0.20 0.06],...
                        'string','0');
                    childHandle.txtPy = txtPy;
                    %------------------------------------------------------
                    set(lblMinWavelength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.65 0.15 0.09]);
                    childHandle.lblMinWavelength = lblMinWavelength;
                    set(txtMinWavelength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.68 0.20 0.06]);
                    childHandle.txtMinWavelength = txtMinWavelength;
                    
                    set(lblMaxWavelength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.65 0.15 0.09]);
                    childHandle.lblMaxWavelength = lblMaxWavelength;
                    set(txtMaxWavelength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.68 0.20 0.06]);
                    childHandle.txtMaxWavelength = txtMaxWavelength;
                    %-------------------------------------------------------
                    set(lblWavelengthStep,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.55 0.15 0.09]);
                    childHandle.lblWavelengthStep = lblWavelengthStep;
                    set(txtWavelengthStep,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.58 0.20 0.06]);
                    childHandle.txtWavelengthStep = txtWavelengthStep;
                    %-------------------------------------------------------
                    
                    % Take the start and end surface indices
                    %-------------------------------------------------------
                    set(lblStartSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.45 0.20 0.09]);
                    childHandle.lblStartSurfaceIndex = lblStartSurfaceIndex;
                    set(popStartSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',... %'String',['New Wavelength';get(popEndSurfaceIndex,'String')],...
                        'Position', [0.27 0.47 0.20 0.07]);
                    childHandle.popStartSurfaceIndex = popStartSurfaceIndex;
                    set(chkStartSurfaceInclusive,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.47 0.40 0.09]);
                    childHandle.chkStartSurfaceInclusive = chkStartSurfaceInclusive;
                    %-------------------------------------------------------
                    set(lblEndSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.35 0.20 0.09]);
                    childHandle.lblEndSurfaceIndex = lblEndSurfaceIndex;
                    set(popEndSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',... %'String',['New Wavelength';get(popEndSurfaceIndex,'String')],...
                        'Position', [0.27 0.37 0.20 0.07]);
                    childHandle.popEndSurfaceIndex = popEndSurfaceIndex;
                    set(chkEndSurfaceInclusive,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.37 0.40 0.09]);
                    childHandle.chkEndSurfaceInclusive = chkEndSurfaceInclusive;
                    
                case lower('GaussianPulsePropagation')
                    % Take pilot ray parameters
                    set(lblHx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.85 0.20 0.09]);
                    childHandle.lblHx = lblHx;
                    set(txtHx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.88 0.20 0.06],...
                        'string','0');
                    childHandle.txtHx = txtHx;
                    
                    set(lblHy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.85 0.20 0.09]);
                    childHandle.lblHy = lblHy;
                    set(txtHy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.88 0.20 0.06],...
                        'string','0');
                    childHandle.txtHy = txtHy;
                    
                    %------------------------------------------------------
                    set(lblPx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.75 0.20 0.09]);
                    childHandle.lblPx = lblPx;
                    set(txtPx,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.78 0.20 0.06],...
                        'string','0');
                    childHandle.txtPx = txtPx;
                    
                    set(lblPy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.75 0.20 0.09]);
                    childHandle.lblPy = lblPy;
                    set(txtPy,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.78 0.20 0.06],...
                        'string','0');
                    childHandle.txtPy = txtPy;
                    
                    %-------------------------------------------------------
                    set(lblWavelengthIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.65 0.20 0.09]);
                    childHandle.lblWavelengthIndex = lblWavelengthIndex;
                    set(popWavelengthIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'String',['New Wavelength';get(popWavelengthIndex,'String')],...
                        'Position', [0.27 0.67 0.20 0.07],...
                        'Value',primaryWavelengthIndex+1);
                    childHandle.popWavelengthIndex = popWavelengthIndex;
                    set(lblWavelength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.64 0.20 0.09]);
                    childHandle.lblWavelength = lblWavelength;
                    set(txtWavelength,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.68 0.20 0.06]);
                    childHandle.txtWavelength = txtWavelength;
                    % Take the start and end surface indices
                    %-------------------------------------------------------
                    set(lblStartSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.55 0.20 0.09]);
                    childHandle.lblStartSurfaceIndex = lblStartSurfaceIndex;
                    set(popStartSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',... %'String',['New Wavelength';get(popEndSurfaceIndex,'String')],...
                        'Position', [0.27 0.57 0.20 0.07]);
                    childHandle.popStartSurfaceIndex = popStartSurfaceIndex;
                    set(chkStartSurfaceInclusive,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.57 0.40 0.09]);
                    childHandle.chkStartSurfaceInclusive = chkStartSurfaceInclusive;
                    %-------------------------------------------------------
                    set(lblEndSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.45 0.20 0.09]);
                    childHandle.lblEndSurfaceIndex = lblEndSurfaceIndex;
                    set(popEndSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',... %'String',['New Wavelength';get(popEndSurfaceIndex,'String')],...
                        'Position', [0.27 0.47 0.20 0.07]);
                    childHandle.popEndSurfaceIndex = popEndSurfaceIndex;
                    set(chkEndSurfaceInclusive,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.47 0.40 0.09]);
                    childHandle.chkEndSurfaceInclusive = chkEndSurfaceInclusive;
                    
                    % Gaussian pulse parameters
                    %------------------------------------------------------
                    set(lblGaussianPulseSpatialWidth,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.35 0.20 0.09]);
                    childHandle.lblGaussianPulseSpatialWidth = lblGaussianPulseSpatialWidth;
                    set(txtGaussianPulseSpatialWidth,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.38 0.20 0.06],...
                        'string','2');
                    childHandle.txtGaussianPulseSpatialWidth = txtGaussianPulseSpatialWidth;
                    
                    set(lblGaussianPulseRadiusOfCurvature,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.35 0.20 0.09]);
                    childHandle.lblGaussianPulseRadiusOfCurvature = lblGaussianPulseRadiusOfCurvature;
                    set(txtGaussianPulseRadiusOfCurvature,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.38 0.20 0.06],...
                        'string','Inf');
                    childHandle.txtGaussianPulseRadiusOfCurvature = txtGaussianPulseRadiusOfCurvature;
                    
                    %------------------------------------------------------
                    set(lblGaussianPulseTemporalWidth,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.25 0.20 0.09]);
                    childHandle.lblGaussianPulseTemporalWidth = lblGaussianPulseTemporalWidth;
                    set(txtGaussianPulseTemporalWidth,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.28 0.20 0.06],...
                        'string','25e-15');
                    childHandle.txtGaussianPulseTemporalWidth = txtGaussianPulseTemporalWidth;
                    
                    set(lblGaussianPulseTemporalChirp,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.25 0.20 0.09]);
                    childHandle.lblGaussianPulseTemporalChirp = lblGaussianPulseTemporalChirp;
                    set(txtGaussianPulseTemporalChirp,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.28 0.20 0.06],...
                        'string','0');
                    childHandle.txtGaussianPulseTemporalChirp = txtGaussianPulseTemporalChirp;
                    
                    %------------------------------------------------------
                    set(lblOutputSpatialWindow,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.15 0.20 0.09]);
                    childHandle.lblOutputSpatialWindow = lblOutputSpatialWindow;
                    set(txtOutputSpatialWindow,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.27 0.18 0.20 0.06],...
                        'string','0.016');
                    childHandle.txtOutputSpatialWindow = txtOutputSpatialWindow;
                    
                    set(lblOutputTemporalWindow,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.15 0.20 0.09]);
                    childHandle.lblOutputTemporalWindow = lblOutputTemporalWindow;
                    set(txtOutputTemporalWindow,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.78 0.18 0.20 0.06],...
                        'string','300e-15');
                    childHandle.txtOutputTemporalWindow = txtOutputTemporalWindow;
                    %-------------------------------------------------------
                    
                    
                case lower('PulseFrontEvolutionGeometric')
                    set(lblSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.85 0.15 0.09],...
                        'string','Reference Surface');
                    childHandle.lblSurfaceIndex = lblSurfaceIndex;
                    set(popSurfaceIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.22 0.88 0.25 0.07]);
                    childHandle.popSurfaceIndex = popSurfaceIndex;
                    childHandle.txtCoatingName = txtCoatingName;
                    
                    set(lblWavelengthIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.85 0.20 0.09]);
                    childHandle.lblWavelengthIndex = lblWavelengthIndex;
                    set(popWavelengthIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'String',[get(popWavelengthIndex,'String')],...
                        'Position', [0.73 0.88 0.25 0.07],...
                        'Value',primaryWavelengthIndex);
                    childHandle.popWavelengthIndex = popWavelengthIndex;
                    
                    childHandle.txtWavelength = txtWavelength;
                    %------------------------------------------------------
                    set(lblFieldIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.75 0.20 0.09]);
                    childHandle.lblFieldIndex = lblFieldIndex;
                    set(popFieldIndex,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'String',[get(popFieldIndex,'String')],...
                        'Position', [0.22 0.78 0.25 0.07]);
                    childHandle.popFieldIndex = popFieldIndex;
                    
                    set(lblNumberOfRay,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.75 0.20 0.09]);
                    childHandle.lblNumberOfRay = lblNumberOfRay;
                    set(txtNumberOfRay1,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.73 0.78 0.12 0.07],...
                        'string','32');
                    childHandle.txtNumberOfRay1 = txtNumberOfRay1;
                    set(txtNumberOfRay2,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.85 0.78 0.12 0.07],...
                        'string','32');
                    childHandle.txtNumberOfRay2 = txtNumberOfRay2;
                    % ----------------------------------------------------
                    set(lblPupilSamplingType,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.65 0.20 0.09]);
                    childHandle.lblPupilSamplingType = lblPupilSamplingType;
                    set(popPupilSamplingType,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.22 0.68 0.25 0.07]);
                    childHandle.popPupilSamplingType = popPupilSamplingType;
                    %------------------------------------------------------
                    set(chk2DCrossSection,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.68 0.45 0.07],...
                        'Value',true);
                    childHandle.chk2DCrossSection = chk2DCrossSection;
                    
                    %---------------------------------------------------------------
                    set(lblStepVariable,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.53 0.15 0.09]);
                    childHandle.lblStepVariable = lblStepVariable;
                    
                    set(popStepVariable,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.22 0.55 0.25 0.07],...
                        'Value',1);
                    childHandle.popStepVariable = popStepVariable;
                    
                    set(lblStepSize,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.53 0.53 0.20 0.09]);
                    childHandle.lblStepSize = lblStepSize;
                    set(txtStepSize,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.73 0.56 0.25 0.07]);
                    childHandle.txtStepSize = txtStepSize;
                    
                    % ---------------------------------------------------
                    
                    set(lblNumberOfSteps,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.02 0.43 0.18 0.09]);
                    childHandle.lblNumberOfSteps = lblNumberOfSteps;
                    set(txtNumberOfSteps,...
                        'Parent', childHandle.SettingTab, ...
                        'Units', 'normalized', ...
                        'Visible','on',...
                        'Position', [0.22 0.45 0.25 0.07]);
                    childHandle.txtNumberOfSteps = txtNumberOfSteps;
                case lower('FFTFocusedPulse')
                    
                    %% Add case statements for new windows in the
                    % "others" category here
                    %%
            end
            
    end
    
    
    %% Local function
    function updatedHandles = displayPolarizationProfileParameters(myChildHandle,polarizationProfileType,polarizationParameters)
        if nargin < 2
            disp('Error: The function displayPolarizationProfileParameters requires atleast two inputs.');
            return;
        elseif nargin == 2
            firstPolarizationParameters = NaN;
        elseif nargin == 3
            
        end
        
        fontSize = 11;
        fontName = 'FixedWidth';
        % get the Polarization profile parameters from the corresponding
        % spatial profile function
        % Connect the Polarization profile definition function
        polarizationProfileDefinitionHandle = str2func(polarizationProfileType);
        returnFlag = 1; %
        [ parameters, parameterFormats, intialValues ] = polarizationProfileDefinitionHandle(...
            returnFlag);
        % Calculate the size of panelSpatialParameters based on the number of
        % parameters
        nPar = length(parameters);
        
        % Clear the initialPolVectorXYZ
        delete(get(myChildHandle.panelPolarizationParametersBottom,'Child'));
        
        panelPolarizationParametersBottomPosition = get(myChildHandle.panelPolarizationParametersBottom,'Position');
        verticalScaleFactor = panelPolarizationParametersBottomPosition(4);
        verticalOffset = panelPolarizationParametersBottomPosition(4)-1;
        
        verticalFreeSpace = 0.025/verticalScaleFactor;% 2.5% of the the visial window height
        controlHeight = 0.1/verticalScaleFactor;% 6% of the visial window height
        topEdge = 0.1/verticalScaleFactor;% 10% of the the visial window height
        
        lastUicontrolBottom = panelPolarizationParametersBottomPosition(4) - topEdge - 4; %panelPolarizationParametersBottomPosition(4)
        
        horizontalFreeSpace = 0.05;% 5% of the visial window width
        controlWidth = 0.4;% 40% of the visial window width then two controls per line
        % control arrangement 5% + 40% + 5% + 40% + 5%
        leftEdge = 0.05;%
        
        for pp = 1:nPar
            % Display the parameter name
            myChildHandle.lblPolarizationParameter(pp,1) = uicontrol( ...
                'Parent', myChildHandle.panelPolarizationParametersBottom, ...
                'Tag', 'lblParameter', ...
                'Style', 'text', ...
                'Units','normalized',...
                'Position', [leftEdge,lastUicontrolBottom-verticalFreeSpace,...
                controlWidth,controlHeight], ...
                'String',parameters{pp},...
                'HorizontalAlignment','right',...
                'Visible','On',...
                'FontSize',fontSize,'FontName',fontName);
            
            % Display the parameter value text boxes or popup menu
            parFormat = parameterFormats{pp};
            if strcmpi(parFormat{1},'logical')
                nVals = length(parFormat);
                % The parameter format is logical
                for vv = 1:nVals
                    myChildHandle.chkPolarizationParameter(pp,vv) = uicontrol( ...
                        'Parent', myChildHandle.panelPolarizationParametersBottom, ...
                        'Tag', 'chkParameter', ...
                        'Style', 'checkbox', ...
                        'Units','normalized',...
                        'Position', [leftEdge+horizontalFreeSpace+controlWidth,lastUicontrolBottom-verticalFreeSpace,...
                        horizontalFreeSpace,controlHeight], ...
                        'String',parFormat, ...
                        'BackgroundColor', [1 1 1],...
                        'HorizontalAlignment','left',...
                        'Visible','On',...
                        'FontSize',fontSize,'FontName',fontName);
                    lastUicontrolBottom = lastUicontrolBottom -verticalFreeSpace -controlHeight;
                    
                    currentValue = true;
                    set(myChildHandle.txtPolarizationParameter(pp,vv),'Value',currentValue);
                end
            elseif strcmpi(parFormat{1},'numeric')||strcmpi(parFormat{1},'char')
                nVals = length(parFormat);
                
                % The parameter format numeric/char
                for vv = 1:nVals
                    myChildHandle.txtPolarizationParameter(pp,vv) = uicontrol( ...
                        'Parent', myChildHandle.panelPolarizationParametersBottom, ...
                        'Tag', 'txtParameter', ...
                        'Style', 'edit', ...
                        'Units','normalized',...
                        'Position', [leftEdge+horizontalFreeSpace+controlWidth,lastUicontrolBottom-verticalFreeSpace,...
                        controlWidth,controlHeight], ...
                        'String',parFormat, ...
                        'BackgroundColor', [1 1 1],...
                        'HorizontalAlignment','left',...
                        'Visible','On',...
                        'FontSize',fontSize,'FontName',fontName);
                    lastUicontrolBottom = lastUicontrolBottom -verticalFreeSpace -controlHeight;
                    
                    currentValue = '1';
                    set(myChildHandle.txtPolarizationParameter(pp,vv),'String',currentValue);
                end
            else
                vv = 1;
                % The parameter format is list of selection itiems
                myChildHandle.popPolarizationParameter(pp,vv) = uicontrol( ...
                    'Parent', myChildHandle.panelPolarizationParametersBottom, ...
                    'Tag', 'popParameter', ...
                    'Style', 'popupmenu', ...
                    'Units','normalized',...
                    'Position', [leftEdge+horizontalFreeSpace+controlWidth,lastUicontrolBottom-verticalFreeSpace,...
                    controlWidth,controlHeight], ...
                    'String',parFormat, ...
                    'BackgroundColor', [1 1 1],...
                    'HorizontalAlignment','left',...
                    'Visible','On',...
                    'FontSize',fontSize,'FontName',fontName);
                
                lastUicontrolBottom = lastUicontrolBottom -verticalFreeSpace -controlHeight;
                
                currentValue = 1;
                set(myChildHandle.popPolarizationParameter(pp,vv) ,'Value',currentValue);
            end
        end
        updatedHandles = myChildHandle;
    end
    
    %% End of local functions
    
    
    %-----------------------------------------------------------------------
    %% Callbacks of uicontrols
    set(popSurfaceIndex,...
        'Callback',{@popSurfaceIndex_Callback,childWindow,parentWindow});
    set(popWavelengthIndex,...
        'Callback',{@popWavelengthIndex_Callback,childWindow,parentWindow});
    set(chkCheifAndMariginalRay,...
        'Callback',{@chkCheifAndMariginalRay_Callback,childWindow,parentWindow});
    set(popApodizationType, ...
        'Callback',{@popApodizationType_Callback,childWindow,parentWindow});
    set(chkCurrentApodization,...
        'Callback',{@chkCurrentApodization_Callback,childWindow,parentWindow});
    set(chkFieldComponent,...
        'Callback',{@chkFieldComponent_Callback,childWindow,parentWindow});
    
    set(sliderPolarizationParameters,...
        'Callback',{@sliderPolarizationParameters_callback,childWindow,parentWindow});
    set(popPolarizationProfile,...
        'Callback',{@popPolarizationProfile_Callback,childWindow,parentWindow});
    % Add any new uicontrol callbacks here
    %%
    
    function popWavelengthIndex_Callback(hObject, ~,childWindow,parentWindow)
        parentHandle = parentWindow.ParentHandles;
        childHandle = childWindow.ChildHandles;
        [ currentOpticalSystem,saved] = ...
            parentWindow.getCurrentOpticalSystem;
        
        wavLengthIndexList = (get(hObject,'String'));
        wavLengthIndexString = (wavLengthIndexList{get(hObject,'Value')});
        if strcmpi(wavLengthIndexString,'New Wavelength')
            % enable wavelength text box
            set(childHandle.txtWavelength,'String',...
                num2str(primaryWavelengthInUm),...
                'Enable','On');
        elseif strcmpi(wavLengthIndexString,'All')
        else
            maxWavIndexDefined = getNumberOfWavelengths(currentOpticalSystem);
            wavLengthIndex = str2double(wavLengthIndexString);
            if wavLengthIndex > maxWavIndexDefined
                set(hObject,'Value',maxWavIndexDefined+1);
                wavLengthIndex = maxWavIndexDefined;
            end
            % write the wavelength on the wavelength text box and disable it
            wavelength = currentOpticalSystem.WavelengthMatrix(wavLengthIndex,1);
            % Convert from wavelengthunit to um
            wavelength = (wavelength*getWavelengthUnitFactor(currentOpticalSystem))/(10^-6);
            set(childHandle.txtWavelength,'String',num2str(wavelength),'Enable','Off');
        end
    end
    
    function popSurfaceIndex_Callback(hObject,~,childWindow,parentWindow)
        % to update the coating name assocciated with the currently
        % selected window.
        parentHandle = parentWindow.ParentHandles;
        childHandle = childWindow.ChildHandles;
        [ currentOpticalSystem,saved] = ...
            parentWindow.getCurrentOpticalSystem;
        if ~saved
            return;
        end
        surfIndexList = cellstr (get(hObject,'String'));
        surfIndexString = (surfIndexList{get(hObject,'Value')});
        if strcmpi(surfIndexString,'New Coating') % enter new coating
            % enable coating name text box
            set(childHandle.txtCoatingName,'String','None','Enable','On');
        else
            surfIndex = str2double(surfIndexString);
            % write the coating name on the text box and disable it
            coating = currentOpticalSystem.SurfaceArray(surfIndex).Coating;
            set(childHandle.txtCoatingName,'String',coating.Name,'Enable','Off');
        end
    end
    
    function chkCheifAndMariginalRay_Callback(hObject,~,childWindow,parentWindow)
        parentHandle = parentWindow.ParentHandles;
        childHandle = childWindow.ChildHandles;
        if get(childHandle.chkCheifAndMariginalRay,'Value')
            set(childHandle.txtNumberOfRay1,'String','3','Enable','Off');
            set(childHandle.txtNumberOfRay2,'String','3','Enable','Off');
        else
            set(childHandle.txtNumberOfRay1,'String','3','Enable','On');
            set(childHandle.txtNumberOfRay2,'String','3','Enable','On');
        end
    end
    
    function popApodizationType_Callback(hObject,~,childWindow,parentWindow)
        parentHandle = parentWindow.ParentHandles;
        childHandle = childWindow.ChildHandles;
        apodizationTypeList = cellstr (get(hObject,'String'));
        apodizationTypeString = (apodizationTypeList{get(hObject,'Value')});
        switch lower(apodizationTypeString)
            case lower('None')
                set(childHandle.panelSuperGaussParameters,'Visible','off');
                set(get(childHandle.panelSuperGaussParameters,'Children'),'Visible','off');
            case lower('Super Gaussian')
                set(childHandle.panelSuperGaussParameters,'Visible','on');
                set(get(childHandle.panelSuperGaussParameters,'Children'),'Visible','on');
        end
    end
    
    function chkCurrentApodization_Callback(hObject,~,childWindow,parentWindow)
        parentHandle = parentWindow.ParentHandles;
        childHandle = childWindow.ChildHandles;
        if get(childHandle.chkCurrentApodization,'Value')
            [ savedOpticalSystem,saved] = ...
                parentWindow.getCurrentOpticalSystem;
            if isempty(savedOpticalSystem.ApodizationType)
                savedOpticalSystem.ApodizationType = 'None';
                apodTypeIndex = 1;
            else
                apodTypeIndex = find(ismember(savedOpticalSystem.ApodizationType,...
                    get(childHandle.popApodizationType,'String')));
            end
            if ~isempty(apodTypeIndex)
                set(childHandle.popApodizationType,'Value',apodTypeIndex);
            else
                disp(['Error: Apodization type ',...
                    savedOpticalSystem.ApodizationType,' is not defined.']);
                return;
            end
            switch lower(savedOpticalSystem.ApodizationType)
                case lower('None')
                    set(childHandle.panelSuperGaussParameters,'Visible','off');
                    set(get(childHandle.panelSuperGaussParameters,'Children'),'Visible','off');
                    set(childHandle.popApodizationType,'Enable','off','Value',1);
                case lower('Super Gaussian')
                    set(childHandle.panelSuperGaussParameters,'Visible','on');
                    set(get(childHandle.panelSuperGaussParameters,'Children'),'Visible','on');
                    set(childHandle.popApodizationType,'Enable','off','Value',2);
                    
                    apodParam = savedOpticalSystem.ApodizationParameters;
                    set(childHandle.txtApodMaximumIntensity,'String',...
                        num2str(apodParam.MaximumIntensity),...
                        'Enable','off');
                    set(childHandle.txtApodOrder,'String',num2str(apodParam.Order),...
                        'Enable','off');
                    set(childHandle.txtApodBeamRadius,'String',num2str(apodParam.BeamRadius),...
                        'Enable','off');
            end
        else
            set(childHandle.popApodizationType,'Enable','on');
            set(childHandle.txtApodMaximumIntensity,'Enable','on');
            set(childHandle.txtApodOrder,'Enable','on');
            set(childHandle.txtApodBeamRadius, 'Enable','on');
        end
        childWindow.ChildHandles = childHandle;
    end
    
    function chkFieldComponent_Callback(hObject,~,childWindow,parentWindow)
        parentHandle = parentWindow.ParentHandles;
        childHandle = childWindow.ChildHandles;
        if get(childHandle.chkFieldComponent,'Value')
            set(allchild(childHandle.panelJonesVector),'Enable','on');
            set(childHandle.popFieldComponent,'Enable','on');
        else
            set(allchild(childHandle.panelJonesVector),'Enable','off');
            set(childHandle.popFieldComponent,'Enable','off');
        end
        childWindow.ChildHandles = childHandle;
    end
    
    
    function sliderPolarizationParameters_callback(hObject,~,childWindow,parentWindow)
        childHandle = childWindow.ChildHandles;
        val = get(hObject,'Value');
        panelPolarizationParametersBottomPosition = get(childHandle.panelPolarizationParametersBottom,'Position');
        set(childHandle.panelPolarizationParametersBottom,'units','normalized','Position',...
            [panelPolarizationParametersBottomPosition(1),-4.2+ panelPolarizationParametersBottomPosition(4)*(1-val),...
            panelPolarizationParametersBottomPosition(3) panelPolarizationParametersBottomPosition(4)]);
        childWindow.ChildHandles = childHandle;
    end
    
    function popPolarizationProfile_Callback(~,~,childWindow,parentWindow )
        childHandle = childWindow.ChildHandles;
        polarizationProfileList = get(childHandle.popPolarizationProfile,'String');
        polarizationProfileType = polarizationProfileList{get(childHandle.popPolarizationProfile,'Value')};
        childHandle = displayPolarizationProfileParameters(childHandle,polarizationProfileType);
        childWindow.ChildHandles = childHandle;
    end
    % Add any new uicontrol callback definitions here
    
    %% End of  Callbacks of uicontrols    
    parentWindow.ParentHandles = parentHandle;
    childWindow.ChildHandles = childHandle;
end