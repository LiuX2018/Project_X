function InitializeSystemConfigurationPanel(parentWindow)
    % InitializeSurfaceEditorPanel: Define and initialized the uicontrols of the
    % System Configuration Panel
    % Member of ParentWindow class
    
    aodHandles = parentWindow.ParentHandles;
    fontSize = aodHandles.FontSize;
    fontName = aodHandles.FontName;
    
    aodHandles.systConfigurationTabGroup = uitabgroup(...
        'Parent', aodHandles.panelSystemConfigurationData, ...
        'Units', 'Normalized', ...
        'Position', [0, 0.1, 1.0, 0.9],...
        'TabLocation','Left');
    aodHandles.sysApertureDataTab = ...
        uitab(aodHandles.systConfigurationTabGroup, 'title','Aperture');
    aodHandles.sysGeneralDataTab = ...
        uitab(aodHandles.systConfigurationTabGroup, 'title','General');
    aodHandles.sysFieldPointsDataTab = ...
        uitab(aodHandles.systConfigurationTabGroup, 'title','Field Points');
    aodHandles.sysWavelengthsDataTab = ...
        uitab(aodHandles.systConfigurationTabGroup, 'title','Wavelengths');
    aodHandles.sysCoatingCatalogueDataTab = ...
        uitab(aodHandles.systConfigurationTabGroup, 'title','Coating Catalogue');
    aodHandles.sysGlassCatalogueDataTab = ...
        uitab(aodHandles.systConfigurationTabGroup, 'title','Glass Catalogue');
    aodHandles.sysPupilApodizationDataTab = ...
        uitab(aodHandles.systConfigurationTabGroup, 'title','Pupil Apodization');
    
    
    
    %---------------------------------------------------------------------
    
    aodHandles.btnConfigurationOk = uicontrol( ...
        aodHandles.panelSystemConfigurationData,...
        'Units', 'Normalized', ...
        'Style','pushbutton',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Position', [0.7, 0.02, 0.1, 0.06],...
        'String','Ok',...
        'Callback', {@btnConfigurationOk_Callback,...
        parentWindow});
    
    aodHandles.btnConfigurationCancel = uicontrol( ...
        aodHandles.panelSystemConfigurationData,...
        'Units', 'Normalized', ...
        'Style','pushbutton',...
        'FontSize',fontSize,'FontName', 'FixedWidth',...
        'Position', [0.85, 0.02, 0.1, 0.06],...
        'String','Cancel',...
        'Callback', {@btnConfigurationCancel_Callback,...
        parentWindow});
    %---------------------------------------------------------------------
    % All panels
    aodHandles.panelSystemAperture = uipanel(...
        'Parent',aodHandles.sysApertureDataTab,...
        'FontSize',fontSize,'FontName', fontName,...
        'Title','System Aperture',...
        'units','normalized',...
        'Position',[0, 0, 1.0, 1.0]);
    
    aodHandles.panelGeneral = uipanel(...
        'Parent',aodHandles.sysGeneralDataTab,...
        'FontSize',fontSize,'FontName', fontName,...
        'Title','General',...
        'units','normalized',...
        'Position',[0, 0, 1.0, 1.0]);
    
    aodHandles.panelFieldPoints = uipanel(...
        'Parent',aodHandles.sysFieldPointsDataTab,...
        'FontSize',fontSize,'FontName', fontName,...
        'Title','Field Points',...
        'units','normalized',...
        'Position',[0, 0, 1.0, 1.0]);
    
    aodHandles.panelWavelengths = uipanel(...
        'Parent',aodHandles.sysWavelengthsDataTab,...
        'FontSize',fontSize,'FontName', fontName,...
        'Title','Wavelengths',...
        'units','normalized',...
        'Position',[0, 0, 1.0, 1.0]);
    
    aodHandles.panelCoatingCatalogue  = uipanel(...
        'Parent',aodHandles.sysCoatingCatalogueDataTab,...
        'FontSize',fontSize,'FontName', fontName,...
        'Title','Coating Catalogue',...
        'units','normalized',...
        'Position',[0, 0, 1.0, 1.0]);
    
    aodHandles.panelGlassCatalogue = uipanel(...
        'Parent',aodHandles.sysGlassCatalogueDataTab,...
        'FontSize',fontSize,'FontName', fontName,...
        'Title','Glass Catalogue',...
        'units','normalized',...
        'Position',[0, 0, 1.0, 1.0]);
    
    aodHandles.panelPupilApodization = uipanel(...
        'Parent',aodHandles.sysPupilApodizationDataTab,...
        'FontSize',fontSize,'FontName', fontName,...
        'Title','Pupil Apodization',...
        'units','normalized',...
        'Position',[0, 0, 1.0, 1.0]);
    %--------------------------------------------------------------------
    % Put uicontrols in the panels
    % System Aperture Panel
    aodHandles.text5 = uicontrol( ...
        'Parent', aodHandles.panelSystemAperture, ...
        'Tag', 'text5', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.05 0.77 0.3 0.1], ...
        'String', 'Aperture Type');
    aodHandles.popApertureType = uicontrol( ...
        'Parent', aodHandles.panelSystemAperture, ...
        'Tag', 'popApertureType', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Style', 'popupmenu', ...
        'Units', 'normalized', ...
        'Position', [0.35 0.8 0.5 0.08], ...
        'BackgroundColor', [1 1 1], ...
        'String', {'Enterance Pupil Diameter','Object Space NA'});
    
    aodHandles.text11 = uicontrol( ...
        'Parent', aodHandles.panelSystemAperture, ...
        'Tag', 'text11', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.05 0.63 0.3 0.1], ...
        'String', 'Aperture Value');
    aodHandles.txtApertureValue = uicontrol( ...
        'Parent', aodHandles.panelSystemAperture, ...
        'Tag', 'txtApertureValue', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.35 0.65 0.5 0.08], ...
        'BackgroundColor', [1 1 1], ...
        'String', '10', ...
        'HorizontalAlignment', 'left');
    
    %--------------------------------------------------------------------
    % General Panel
    aodHandles.text13 = uicontrol( ...
        'Parent', aodHandles.panelGeneral, ...
        'Tag', 'text13', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.05 0.78 0.3 0.1], ...
        'String', 'Lens Name');
    
    aodHandles.text20 = uicontrol( ...
        'Parent', aodHandles.panelGeneral, ...
        'Tag', 'text20', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.05 0.63 0.3 0.1], ...
        'String', 'Additional Note');
    
    aodHandles.text26 = uicontrol( ...
        'Parent', aodHandles.panelGeneral, ...
        'Tag', 'text26', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.05 0.40 0.3 0.1], ...
        'String', 'Lens Units');
    
    aodHandles.text27 = uicontrol( ...
        'Parent', aodHandles.panelGeneral, ...
        'Tag', 'text27', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.05 0.25 0.3 0.1], ...
        'String', 'Wavelength Units');
    
    aodHandles.text28 = uicontrol( ...
        'Parent', aodHandles.panelGeneral, ...
        'Tag', 'text27', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.05 0.10 0.3 0.1], ...
        'String', 'System Def. Type');
    
    aodHandles.txtLensName = uicontrol( ...
        'Parent', aodHandles.panelGeneral, ...
        'Tag', 'txtLensName', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.35 0.80 0.5 0.08], ...
        'BackgroundColor', [1 1 1], ...
        'String', 'Lens 1', ...
        'HorizontalAlignment', 'left');
    
    aodHandles.txtLensNote = uicontrol( ...
        'Parent', aodHandles.panelGeneral, ...
        'Tag', 'txtLensNote', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.35 0.57 0.5 0.15], ...
        'BackgroundColor', [1 1 1], ...
        'String', 'Note 1', ...
        'HorizontalAlignment', 'left', ...
        'Max', 2);
    
    aodHandles.popLensUnit = uicontrol( ...
        'Parent', aodHandles.panelGeneral, ...
        'Tag', 'popLensUnit', ...
        'Style', 'popupmenu', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.35 0.34 0.5 0.17], ...
        'BackgroundColor', [1 1 1], ...
        'String', {'millimeter(mm)','centimeter(cm)','meter(m)'},...
        'Value',1);
    
    aodHandles.popWavelengthUnit = uicontrol( ...
        'Parent', aodHandles.panelGeneral, ...
        'Tag', 'popWavelengthUnit', ...
        'Style', 'popupmenu', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.35 0.19 0.5 0.17], ...
        'BackgroundColor', [1 1 1], ...
        'String', {'nanometer(nm)','micrometer(um)'},...
        'Value',2);
    aodHandles.popSystemDefinitionType = uicontrol( ...
        'Parent', aodHandles.panelGeneral, ...
        'Tag', 'popSystemDefinitionType', ...
        'Style', 'popupmenu', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.35 0.05 0.5 0.17], ...
        'BackgroundColor', [1 1 1], ...
        'String', {'SurfaceBased','ComponentBased'},...
        'Value',1);
    %--------------------------------------------------------------------
    % Field Points Panel
    % Field Types Selection
    aodHandles.panelFeildType = uibuttongroup( ...
        'Parent', aodHandles.panelFieldPoints, ...
        'Tag', 'panelFeildType', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0 0.86 0.85 0.13], ...
        'Title', '');
    
    aodHandles.radioObjectHeight = uicontrol( ...
        'Parent', aodHandles.panelFeildType, ...
        'Tag', 'radioObjectHeight', ...
        'UserData', zeros(1,0), ...
        'Style', 'radiobutton', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0 0 0.3 0.96], ...
        'String', 'Object Height');
    
    aodHandles.radioImageHeight = uicontrol( ...
        'Parent', aodHandles.panelFeildType, ...
        'Tag', 'radioImageHeight', ...
        'UserData', zeros(1,0), ...
        'Style', 'radiobutton', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.3 0 0.3 0.96], ...
        'String', 'Image Height');
    
    aodHandles.radioAngle = uicontrol( ...
        'Parent', aodHandles.panelFeildType, ...
        'Tag', 'radioAngle', ...
        'Style', 'radiobutton', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.6 0 0.35 0.96], ...
        'String', 'Angle in Degree');
    
    aodHandles.txtTotalFieldPointsSelected = uicontrol( ...
        'Parent', aodHandles.panelFieldPoints, ...
        'Tag', 'txtTotalFieldPointsSelected', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.87 0.86 0.12 0.12], ...
        'String', '0', ...
        'Enable', 'off');
    
    %-------------------------------------------------------------------
    aodHandles.lblFieldNormalization = uicontrol( ...
        'Parent', aodHandles.panelFieldPoints, ...
        'Tag', 'lblFieldNormalization', ...
        'Style', 'text', ...
        'HorizontalAlignment','Left',...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.05 0.74 0.4 0.1], ...
        'String', 'Field Normalization');
    aodHandles.popFieldNormalization = uicontrol( ...
        'Parent', aodHandles.panelFieldPoints, ...
        'Tag', 'popFieldNormalization', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Style', 'popupmenu', ...
        'Units', 'normalized', ...
        'Position', [0.55 0.76 0.4 0.09], ...
        'BackgroundColor', [1 1 1], ...
        'String', {'Rectangular','Radial'});
    %--------------------------------------------------------------------
    
    % Feild Value Entry
    aodHandles.tblFieldPoints = uitable(...
        'Parent',aodHandles.panelFieldPoints,...
        'FontSize',fontSize,'FontName', fontName,...
        'units','normalized',...
        'Position',[0 0 1 0.75]);
    set(aodHandles.tblFieldPoints, ...
        'CellEditCallback',{@tblFieldPoints_CellEditCallback,aodHandles});
    %-------------------------------------------------------------------
    % Wavelengths  Panel
    % Field Types Selection
    aodHandles.panelWavelengthSetting = uipanel( ...
        'Parent', aodHandles.panelWavelengths, ...
        'Tag', 'panelWavelengths', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0 0.86 0.85 0.13], ...
        'Title', '');
    
    aodHandles.txtPredefinedWav = uicontrol( ...
        'Parent', aodHandles.panelWavelengthSetting, ...
        'Tag', 'txtPredefinedWav', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0 0 0.25 0.7], ...
        'String', 'Predefined');
    aodHandles.popPredefinedWavlens = uicontrol( ...
        'Parent', aodHandles.panelWavelengthSetting, ...
        'Tag', 'popPredefinedWavlens', ...
        'Style', 'popupmenu', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.27 0.11 0.28 0.8], ...
        'String', 'Green()');
    
    aodHandles.txtPrimaryWavIndex = uicontrol( ...
        'Parent', aodHandles.panelWavelengthSetting, ...
        'Tag', 'txtPrimaryWavIndex', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.57 0 0.22 0.8], ...
        'String', 'Primary');
    aodHandles.popPrimaryWavlenIndex = uicontrol( ...
        'Parent', aodHandles.panelWavelengthSetting, ...
        'Tag', 'popPrimaryWavlenIndex', ...
        'Style', 'popupmenu', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.82 0.11 0.15 0.8], ...
        'String', '');
    
    aodHandles.txtTotalWavelengthsSelected = uicontrol( ...
        'Parent', aodHandles.panelWavelengths, ...
        'Tag', 'txtTotalWavelengthsSelected', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.87 0.86 0.12 0.13], ...
        'String', '0', ...
        'Enable', 'off');
    
    % Wavelength Value Entry
    aodHandles.tblWavelengths = uitable(...
        'Parent',aodHandles.panelWavelengths,...
        'FontSize',fontSize,'FontName', fontName,...
        'units','normalized',...
        'Position',[0 0 1 0.85]);
    
    set(aodHandles.tblWavelengths, ...
        'CellEditCallback',{@tblWavelengths_CellEditCallback,aodHandles});
    
    %--------------------------------------------------------------------
    % Coating Catalogue Panel
    aodHandles.cmdAddCoatingCatalogue = uicontrol( ...
        'Parent', aodHandles.panelCoatingCatalogue, ...
        'Tag', 'cmdAddCoatingCatalogue', ...
        'Style', 'pushbutton', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.02 0.91 0.20 0.08], ...
        'String', 'Add');
    
    aodHandles.txtTotalCoatingCataloguesSelected = uicontrol( ...
        'Parent', aodHandles.panelCoatingCatalogue, ...
        'Tag', 'txtTotalFieldPointsSelected', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.78 0.91 0.20 0.08], ...
        'String', '0', ...
        'Enable', 'off');
    
    % Coating Catalogues Entry
    aodHandles.tblCoatingCatalogues = uitable(...
        'Parent',aodHandles.panelCoatingCatalogue,...
        'FontSize',fontSize,'FontName', fontName,...
        'units','normalized',...
        'Position',[0 0 1 0.90]);
    set(aodHandles.tblCoatingCatalogues, ...
        'CellEditCallback',{@tblCoatingCatalogues_CellEditCallback,aodHandles});
    set(aodHandles.cmdAddCoatingCatalogue,...
        'Callback',{@cmdAddCoatingCatalogue,parentWindow});
    %---------------------------------------------------------------------
    % Glass Catalogue Panel
    aodHandles.cmdAddGlassCatalogue = uicontrol( ...
        'Parent', aodHandles.panelGlassCatalogue, ...
        'Tag', 'cmdAddGlassCatalogue', ...
        'Style', 'pushbutton', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.02 0.91 0.20 0.08], ...
        'String', 'Add');
    
    aodHandles.txtTotalGlassCataloguesSelected = uicontrol( ...
        'Parent', aodHandles.panelGlassCatalogue, ...
        'Tag', 'txtTotalGlassCataloguesSelected', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.78 0.91 0.20 0.08], ...
        'String', '0', ...
        'Enable', 'off');
    
    % Glass Catalogues Entry
    aodHandles.tblGlassCatalogues = uitable(...
        'Parent',aodHandles.panelGlassCatalogue,...
        'FontSize',fontSize,'FontName', fontName,...
        'units','normalized',...
        'Position',[0 0 1 0.90],...
        'ColumnName', {'Select','Glass Catalogue Full Path'},...
        'ColumnWidth',{70,460});
    set(aodHandles.tblGlassCatalogues, ...
        'CellEditCallback',{@tblGlassCatalogues_CellEditCallback,aodHandles});
    set(aodHandles.cmdAddGlassCatalogue,...
        'Callback',{@cmdAddGlassCatalogue,parentWindow});
    %--------------------------------------------------------------------
    % Pupil Apodization
    
    aodHandles.lblApodizationType = uicontrol( ...
        'Parent', aodHandles.panelPupilApodization, ...
        'Tag', 'lblApodizationType', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.1 0.8 0.35 0.1], ...
        'String', 'Apodization Type',...
        'HorizontalAlignment', 'left');
    aodHandles.popApodizationType = uicontrol( ...
        'Parent', aodHandles.panelPupilApodization, ...
        'Tag', 'popApodizationType', ...
        'Style', 'popupmenu', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.5 0.8 0.3 0.1], ...
        'BackgroundColor', [1 1 1], ...
        'String', {'None','Super Gaussian'});
    
    aodHandles.panelSuperGaussParameters = uipanel(...
        'Parent',aodHandles.panelPupilApodization,...
        'FontSize',fontSize,'FontName', fontName,...
        'Title','Super Gauss Parameters',...
        'units','normalized',...
        'Position',[0.1,0.1,0.80,0.7],...
        'Visible','off');
    
    aodHandles.lblApodMaximumIntensity = uicontrol( ...
        'Parent', aodHandles.panelSuperGaussParameters, ...
        'Tag', 'lblApodMaximumIntensity', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.1 0.8 0.35 0.15], ...
        'String', 'Maximum Intensity', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    aodHandles.txtApodMaximumIntensity = uicontrol( ...
        'Parent', aodHandles.panelSuperGaussParameters, ...
        'Tag', 'txtApodMaximumIntensity', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.5 0.8 0.3 0.15], ...
        'BackgroundColor', [1 1 1], ...
        'String', '1', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    
    aodHandles.lblApodOrder = uicontrol( ...
        'Parent', aodHandles.panelSuperGaussParameters, ...
        'Tag', 'lblApodOrder', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.1 0.6 0.35 0.15], ...
        'String', 'Order', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    aodHandles.txtApodOrder = uicontrol( ...
        'Parent', aodHandles.panelSuperGaussParameters, ...
        'Tag', 'txtApodOrder', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.5 0.6 0.3 0.15], ...
        'BackgroundColor', [1 1 1], ...
        'String', '1', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    aodHandles.lblApodBeamRadius = uicontrol( ...
        'Parent', aodHandles.panelSuperGaussParameters, ...
        'Tag', 'lblApodBeamRadius', ...
        'Style', 'text', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.1 0.4 0.35 0.15], ...
        'String', 'Beam Radius', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    aodHandles.txtApodBeamRadius = uicontrol( ...
        'Parent', aodHandles.panelSuperGaussParameters, ...
        'Tag', 'txtApodBeamRadius', ...
        'Style', 'edit', ...
        'FontSize',fontSize,'FontName', fontName,...
        'Units', 'normalized', ...
        'Position', [0.5 0.4 0.3 0.15], ...
        'BackgroundColor', [1 1 1], ...
        'String', '1', ...
        'Visible','off',...
        'HorizontalAlignment', 'left');
    
    
    set(aodHandles.popApodizationType, ...
        'Callback',{@popApodizationType_Callback,aodHandles});
    %--------------------------------------------------------------------
    parentWindow.ParentHandles = aodHandles;
    parentWindow.resetSystemConfigurationPanel;
end

% Call backs Implementation
function btnConfigurationOk_Callback(~,~,parentWindow)
    SaveConfigurationData(parentWindow);
    close(parentWindow.ParentHandles.SystemConfigurationFigureHandle);
end        
function btnConfigurationCancel_Callback(~,~,parentWindow)
   close(parentWindow.ParentHandles.SystemConfigurationFigureHandle);
end 
% --- Executes when popApodizationType is changed in aodHandles.popApodizationType.
function popApodizationType_Callback(hObject, eventdata,aodHandles)
    apodizationTypeList = cellstr (get(hObject,'String'));
    apodizationTypeString = (apodizationTypeList{get(hObject,'Value')});
    switch lower(apodizationTypeString)
        case lower('None')
            set(aodHandles.panelSuperGaussParameters,'Visible','off');
            set(get(aodHandles.panelSuperGaussParameters,'Children'),'Visible','off');
        case lower('Super Gaussian')
            set(aodHandles.panelSuperGaussParameters,'Visible','on');
            set(get(aodHandles.panelSuperGaussParameters,'Children'),'Visible','on');
    end
end
% --- Executes when selected cell(s) is changed in aodHandles.tblWavelengths.
function tblWavelengths_CellEditCallback(~, eventdata,aodHandles)
    selCell = eventdata.Indices;
    selCol = selCell(2);
    selRow = selCell(1);
    if ~isempty(selRow) && selCol == 1
        tblData = get(aodHandles.tblWavelengths,'data');
        chkBox = tblData{selRow,1};
        if chkBox
            % Add New wavelength Row
            tblData1 = get(aodHandles.tblWavelengths,'data');
            newRow1 =  {false,0.55,1};
            newTable1 = [tblData1; newRow1];
            set(aodHandles.tblWavelengths, 'Data', newTable1);
            set(aodHandles.txtTotalWavelengthsSelected, 'String',...
                str2double(get(aodHandles.txtTotalWavelengthsSelected, 'String'))+1);
        else
            if str2double(get(aodHandles.txtTotalWavelengthsSelected, 'String')) > 1
                % Remove the current field Row
                tblData1 = get(aodHandles.tblWavelengths,'data');
                totRow = size(tblData1,1);
                parta1 = tblData1(1:selRow-1,:);
                partb1 = tblData1(selRow+1:totRow ,:);
                newTable1 = [parta1; partb1];
                set(aodHandles.tblWavelengths, 'Data', newTable1);
                set(aodHandles.txtTotalWavelengthsSelected, 'String',...
                    str2double(get(aodHandles.txtTotalWavelengthsSelected, 'String'))-1);
            else
                tblData1 = get(aodHandles.tblWavelengths,'data');
                tblData1{1,1} = true;
                set(aodHandles.tblWavelengths, 'Data', tblData1);
            end
        end
        nWav = str2double(get(aodHandles.txtTotalWavelengthsSelected, 'String'));
        defaultPrimaryWav = floor((nWav+1)/2);
        set(aodHandles.popPrimaryWavlenIndex,'String',num2cell(1:nWav),'Value',defaultPrimaryWav);
    end
end

% Call backs Implementation
% --- Executes when selected cell(s) is changed in aodHandles.tblFieldPoints.
function tblFieldPoints_CellEditCallback(~, eventdata,aodHandles)
    selCell = eventdata.Indices;
    selCol = selCell(2);
    selRow = selCell(1);
    if ~isempty(selRow) && selCol == 1
        tblData = get(aodHandles.tblFieldPoints,'data');
        chkBox = tblData{selRow,1};
        if chkBox
            % Add New Field Row
            tblData1 = get(aodHandles.tblFieldPoints,'data');
            newRow1 =  {false,0,0,1};
            newTable1 = [tblData1; newRow1];
            set(aodHandles.tblFieldPoints, 'Data', newTable1);
            set(aodHandles.txtTotalFieldPointsSelected, 'String',...
                str2double(get(aodHandles.txtTotalFieldPointsSelected, 'String'))+1);
        else
            if str2double(get(aodHandles.txtTotalFieldPointsSelected, 'String')) > 1
                % Remove the current field Row
                tblData1 = get(aodHandles.tblFieldPoints,'data');
                totRow = size(tblData1,1);
                parta1 = tblData1(1:selRow-1,:);
                partb1 = tblData1(selRow+1:totRow ,:);
                newTable1 = [parta1; partb1];
                set(aodHandles.tblFieldPoints, 'Data', newTable1);
                set(aodHandles.txtTotalFieldPointsSelected, 'String',...
                    str2double(get(aodHandles.txtTotalFieldPointsSelected, 'String'))-1);
            else
                tblData1 = get(aodHandles.tblFieldPoints,'data');
                tblData1{1,1} = true;
                set(aodHandles.tblFieldPoints, 'Data', tblData1);
            end
        end
    end
end

% --- Executes when selected cell(s) is changed in aodHandles.tblCoatingCatalogues.
function tblCoatingCatalogues_CellEditCallback(~, eventdata,aodHandles)
    selCell = eventdata.Indices;
    selCol = selCell(2);
    selRow = selCell(1);
    if ~isempty(selRow) && selCol == 1
        tblData = get(aodHandles.tblCoatingCatalogues,'data');
        chkBox = tblData{selRow,1};
        if chkBox
            set(aodHandles.txtTotalCoatingCataloguesSelected, 'String',...
                str2double(get(aodHandles.txtTotalCoatingCataloguesSelected, 'String'))+1);
        else
            set(aodHandles.txtTotalCoatingCataloguesSelected, 'String',...
                str2double(get(aodHandles.txtTotalCoatingCataloguesSelected, 'String'))-1);
        end
    end
end


function cmdAddCoatingCatalogue (~, eventdata,parentWindow)
    [FileNameExt,PathName] = uigetfile({'*.mat'},'Select Coating Catalogue File');
    % take the extension out of file name
    if (FileNameExt~=0)
        [~,FileName,ext] = fileparts(FileNameExt);
        
        fullFileName = addCoatingCatalogue(parentWindow,[PathName,FileNameExt]);
    else % FileNameExt=0 when no file is selected
        FileName = 0;
        ext = 0;
    end
end


function cmdAddGlassCatalogue (~, eventdata,parentWindow)
    [FileNameExt,PathName] = uigetfile({'*.mat'},'Select Glass Catalogue File');
    % take the extension out of file name
    if (FileNameExt~=0)
        [~,FileName,ext] = fileparts(FileNameExt);
        
        fullFileName = addGlassCatalogue(parentWindow,[PathName,FileNameExt]);
    else % FileNameExt=0 when no file is selected
        FileName = 0;
        ext = 0;
    end
end

% --- Executes when selected cell(s) is changed in aodHandles.tblGlassCatalogues.
function tblGlassCatalogues_CellEditCallback(~, eventdata,aodHandles)
    selCell = eventdata.Indices;
    selCol = selCell(2);
    selRow = selCell(1);
    if ~isempty(selRow) && selCol == 1
        tblData = get(aodHandles.tblGlassCatalogues,'data');
        chkBox = tblData{selRow,1};
        if chkBox
            set(aodHandles.txtTotalGlassCataloguesSelected, 'String',...
                str2double(get(aodHandles.txtTotalGlassCataloguesSelected, 'String'))+1);
        else
            set(aodHandles.txtTotalGlassCataloguesSelected, 'String',...
                str2double(get(aodHandles.txtTotalGlassCataloguesSelected, 'String'))-1);
        end
    end
end


function SaveConfigurationData(parentWindow)
    aodHandles = parentWindow.ParentHandles;
    %System Configuration
    %aperture
    tempSystemApertureType=get(aodHandles.popApertureType,'Value');
    tempSystemApertureValue=str2double(get(aodHandles.txtApertureValue,'String'));

    %general
    tempLensName=get(aodHandles.txtLensName,'String');
    tempLensNote=get(aodHandles.txtLensNote,'String');
    tempLensUnit=get(aodHandles.popLensUnit,'Value');
    tempWavelengthUnit=get(aodHandles.popWavelengthUnit,'Value');
    tempSystemDefType = get(aodHandles.popSystemDefinitionType,'Value');
    
    %wavelength
    tempPrimaryWavelengthIndex = get(aodHandles.popPrimaryWavlenIndex,'Value');
    tempPredefinedWavlens      = get(aodHandles.popPredefinedWavlens,'Value');

    tblData = get(aodHandles.tblWavelengths,'data');
    tempWavelengthMatrix = reshape([tblData{:,:}],length([tblData{:,:}])/3,3);
    % Remove the 1st col (Selected Chekbox) and last row (just empty row)
    if tempWavelengthMatrix(end,1)== 0 % checks condn
       tempWavelengthMatrix = tempWavelengthMatrix(1:end-1,2:end);
    end

    %fields
    tempAngle = get(aodHandles.radioAngle,'Value');
    tempObjectHeight = get(aodHandles.radioObjectHeight,'Value');
    tempImageHeight = get(aodHandles.radioImageHeight,'Value');
    if tempAngle
        tempFieldType = 'Angle';
    elseif tempObjectHeight
        tempFieldType = 'ObjectHeight';
    elseif tempImageHeight
        % Currently Imageheight is not supported so take as object heigth. 
       tempFieldType = 'ObjectHeight'; 
    end
    
    tempFieldNormalizationList = cellstr (get(aodHandles.popFieldNormalization,'String'));
    tempFieldNormalization = (tempFieldNormalizationList{get(aodHandles.popFieldNormalization,'Value')});
    
    tblData2 = get(aodHandles.tblFieldPoints,'data');
    tempFieldPointMatrix = reshape([tblData2{:,:}],length([tblData2{:,:}])/4,4);
    % Remove the 1st col (Selected Chekbox) and last row (just empty row)
    if tempFieldPointMatrix(end,1)==0 % checks condn
       tempFieldPointMatrix = tempFieldPointMatrix(1:end-1,2:end);
    end

 % Coating Catalogue
 tableData1 = get(aodHandles.tblCoatingCatalogues,'data');
 if ~isempty(tableData1)
     % Take only the selected ones
     selectedRows1 = find(cell2mat(tableData1(:,1)));
     if ~isempty(selectedRows1)
         tempCoatingCataloguesList = tableData1(selectedRows1,3);
     else
         tempCoatingCataloguesList = [];
     end
 else
     tempCoatingCataloguesList = [];
 end
 
 % Glass Catalogue
 tableData2 = get(aodHandles.tblGlassCatalogues,'data');
 if ~isempty(tableData2)
     % Take only the selected ones
     selectedRows2 = find(cell2mat(tableData2(:,1)));
     if ~isempty(selectedRows2)
         tempGlassCataloguesList = tableData2(selectedRows2,3);
     else
         tempGlassCataloguesList = [];
     end
 else
     tempGlassCataloguesList = [];
 end
 
 % Pupil Apodization
 tempApodizationTypeList = cellstr (get(aodHandles.popApodizationType,'String'));
 tempApodizationType = (tempApodizationTypeList{get(aodHandles.popApodizationType,'Value')});
 tempApodizationParameters = struct();
 switch lower(tempApodizationType)
     case lower('None')
         tempApodizationParameters = '';
     case lower('Super Gaussian')
         tempApodizationParameters.MaximumIntensity = str2double(get(aodHandles.txtApodMaximumIntensity,'String'));
         tempApodizationParameters.Order = str2double(get(aodHandles.txtApodOrder,'String'));
         tempApodizationParameters.BeamRadius = str2double(get(aodHandles.txtApodBeamRadius,'String'));
 end
 
     %% Now write all the configuration data to the optical system object
    modifiedOpticalSystem = aodHandles.OpticalSystem;    
    %set aperture
    modifiedOpticalSystem.SystemApertureType = tempSystemApertureType;
    modifiedOpticalSystem.SystemApertureValue = tempSystemApertureValue;
    %set general
    modifiedOpticalSystem.LensName = tempLensName;
    modifiedOpticalSystem.LensNote = tempLensNote;
    modifiedOpticalSystem.WavelengthUnit = tempWavelengthUnit;
    modifiedOpticalSystem.LensUnit = tempLensUnit;
    
    if IsComponentBased(modifiedOpticalSystem) && tempSystemDefType == 1 
        % Convert from component to Surface based
        [ modifiedOpticalSystem ] = convertToSurfaceBased( modifiedOpticalSystem );
    elseif IsSurfaceBased(modifiedOpticalSystem) && tempSystemDefType == 2 
        % Convert from Surface to component based
        [ modifiedOpticalSystem ] = convertToComponentBased( modifiedOpticalSystem );
    end
   
    modifiedOpticalSystem.ObjectAfocal = 0;
    modifiedOpticalSystem.ImageAfocal = 0;
    modifiedOpticalSystem.ObjectTelecenteric = 0;
    modifiedOpticalSystem.ObjectTelecenteric = 0;

    %set wavelength
    modifiedOpticalSystem.WavelengthMatrix = tempWavelengthMatrix;
    modifiedOpticalSystem.PrimaryWavelengthIndex = tempPrimaryWavelengthIndex;
    %set field
    modifiedOpticalSystem.FieldType = tempFieldType;
    modifiedOpticalSystem.FieldPointMatrix = tempFieldPointMatrix;
    modifiedOpticalSystem.CoatingCataloguesList = tempCoatingCataloguesList;
    modifiedOpticalSystem.GlassCataloguesList = tempGlassCataloguesList;
    
    modifiedOpticalSystem.ApodizationType = tempApodizationType;
    modifiedOpticalSystem.ApodizationParameters = tempApodizationParameters;
   
    modifiedOpticalSystem.FieldNormalization = tempFieldNormalization;

    aodHandles.OpticalSystem = modifiedOpticalSystem;
    parentWindow.ParentHandles = aodHandles;
    updateSurfaceOrComponentEditorPanel( parentWindow );
end