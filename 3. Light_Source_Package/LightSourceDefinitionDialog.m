function [ updatedSourceObject ] = LightSourceDefinitionDialog(initialSourceObject,fontSize,fontName)
%LIGHTSOURCEDEFINITIONDIALOG A GUI to input all source parameters and
%returns the source object. The  lightSourceObjectHandle is handle
%object of lightSourceObject and it will be updated using the
%user input.

if nargin < 1
    initialSourceObject = HarmonicFieldSource;
    fontSize = 10;
    fontName = 'FixedSize';
end
% Initialize handles structure
handles = struct;
handles.CurrentSourceObject = initialSourceObject;

%     build_gui();

%   function build_gui()
% Creation of all uicontrols
% --- FIGURE -------------------------------------
handles.FigureHandle = figure( ...
    'Tag', 'FigureHandle', ...
    'Units','Normalized',...
    'Position', [0.3,0.2,0.45,0.6], ...
    'Name', 'Light Source Data Entry', ... %'WindowStyle','Modal',...
    'MenuBar', 'none', ...
    'NumberTitle', 'off', ...
    'Renderer','painters',...
    'Color', get(0,'DefaultUicontrolBackgroundColor'));
% Assign function output
figureHandle = handles.FigureHandle;

% --- TABS and PANELS ----------------------------------------
handles.SourceDefinitionTabGroup = uitabgroup(...
    'Parent', handles.FigureHandle, ...
    'Units', 'Normalized', ...
    'Position', [0, 0.01, 1.0, 0.96],...
    'TabLocation','Left');

% ----- 1. Basic Parameters ----------------------------------
handles.tabBasicParameters = ...
    uitab(handles.SourceDefinitionTabGroup, 'title','   Basic Parameters   ');
handles.panelBasicParameters = uipanel( ...
    'Parent', handles.tabBasicParameters, ...
    'Tag', 'panelBasicParameters', ...
    'Units','Normalized',...
    'Position', [0,0.1,1,0.9], ...
    'FontSize',fontSize,...
    'FontName',fontName);%,...
%'Title', 'Basic Parameters');
handles.panelPositionSizeShape = uipanel( ...
    'Parent', handles.panelBasicParameters, ...
    'Tag', 'panelPositionSizeShape', ...
    'Units','Normalized',...
    'Position', [0,0.15,1,0.85], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'Title', 'Position Size and Shape');

handles.lblLateralPosition = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'lblLateralPosition', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.90,0.45,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'String', 'Lateral Position (X:Y)');


handles.txtLateralPositionX = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'txtLateralPositionX', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.50,0.90,0.20,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '0', ...
    'FontSize',fontSize,'FontName',fontName);

handles.txtLateralPositionY = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'txtLateralPositionY', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.75,0.90,0.20,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '0', ...
    'FontSize',fontSize,'FontName',fontName);
% -----------------------------------------------------------------
handles.lblDistanceToInputPlane = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'lblDistanceToInputPlane', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.80,0.45,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'String', 'Distance To Input Plane');


handles.txtDistanceToInputPlane = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'txtDistanceToInputPlane', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.50,0.80,0.45,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '10e-3', ...
    'FontSize',fontSize,'FontName',fontName);
% -----------------------------------------------------------------

handles.lblDirection = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'lblDirection', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.70,0.45,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'String', 'Direction Cosines (Dx:Dy:Dz)');


handles.txtDirectionX = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'txtLateralDirectionX', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.50,0.70,0.14,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '0', ...
    'FontSize',fontSize,'FontName',fontName);

handles.txtDirectionY = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'txtLateralDirectionY', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.65,0.70,0.14,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '0', ...
    'FontSize',fontSize,'FontName',fontName);
handles.txtDirectionZ = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'txtLateralDirectionZ', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.80,0.70,0.15,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '1', ...
    'FontSize',fontSize,'FontName',fontName);

% -----------------------------------------------------------------
handles.lblFieldSizeSpecification = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'lblFieldSizeSpecification', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.60,0.45,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'String', 'Field Size Specification');

handles.popFieldSizeSpecification = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'popFieldSizeSpecification', ...
    'Style', 'popupmenu', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.50,0.60,0.45,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', {'Relative','Absolute'}, ...
    'Value',1,...
    'FontSize',fontSize,'FontName',fontName);

% -----------------------------------------------------------------
handles.lblRelativeFieldSizeFactor = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'lblRelativeFieldSizeFactor', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.50,0.45,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'String', 'Relative Field Size Factor');


handles.txtRelativeFieldSizeFactor = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'txtRelativeFieldSizeFactor', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.50,0.50,0.45,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '1', ...
    'FontSize',fontSize,'FontName',fontName);
% -----------------------------------------------------------------

handles.lblAbsoluteBoarderShape = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'lblAbsoluteBoarderShape', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.50,0.45,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'Visible','Off',...
    'String', 'Absolute Boarder Shape');

handles.popAbsoluteBoarderShape = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'popAbsoluteBoarderShape', ...
    'Style', 'popupmenu', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.50,0.50,0.45,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', {'Elliptical','Rectangular'}, ...
    'Value',1,...
    'Visible','Off',...
    'FontSize',fontSize,'FontName',fontName);
% -----------------------------------------------------------------
handles.lblAbsoluteFieldSize = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'lblAbsoluteFieldSize', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.40,0.45,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'Visible','Off',...
    'String', 'Absolute Field Size (X:Y)');


handles.txtAbsoluteFieldSize = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'txtAbsoluteFieldSize', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.50,0.40,0.45,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '10e-6', ...
    'Visible','Off',...
    'FontSize',fontSize,'FontName',fontName);
% -----------------------------------------------------------------
handles.lblEdgeSizeSpecification = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'lblEdgeSizeSpecification', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.30,0.45,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'String', 'Edge Size Specification');


handles.popEdgeSizeSpecification = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'popEdgeSizeSpecification', ...
    'Style', 'popupmenu', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.50,0.30,0.45,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String',{'Relative','Absolute'}, ...
    'Value',1,...
    'FontSize',fontSize,'FontName',fontName);
% -----------------------------------------------------------------
handles.lblRelativeEdgeSizeFactor = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'lblRelativeEdgeSizeFactor', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.20,0.45,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'Visible','on',...
    'String', 'Relative Edge Size Factor');

handles.txtRelativeEdgeSizeFactor = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'txtRelativeEdgeSizeFactor', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.50,0.20,0.45,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '1e-2', ...
    'Visible','on',...
    'FontSize',fontSize,'FontName',fontName);
% -----------------------------------------------------------------
handles.lblAbsoluteEdgeSize = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'lblAbsoluteEdgeSize', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.2,0.45,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'Visible','Off',...
    'String', 'Absolute Edge Size');


handles.txtAbsoluteEdgeSize = uicontrol( ...
    'Parent', handles.panelPositionSizeShape, ...
    'Tag', 'txtAbsoluteEdgeSize', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.50,0.20,0.45,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '10e-6', ...
    'Visible','Off',...
    'FontSize',fontSize,'FontName',fontName);
% -----------------------------------------------------------------

handles.panelMedium = uipanel( ...
    'Parent', handles.panelBasicParameters, ...
    'Tag', 'panelMedium', ...
    'Units','Normalized',...
    'Position', [0,0,1,0.15], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'Title', 'Medium');

% ----- 2. Spatial Parameters ----------------------------------
handles.tabSpatialParameters = ...
    uitab(handles.SourceDefinitionTabGroup, 'title','   Spatial Parameters   ');
% Panel with fixed size is used as window visible while using the
% slider to scroll through the uicontrols.
handles.panelVisibleWindowSpatialProfile = uipanel( ...
    'Parent', handles.tabSpatialParameters, ...
    'Tag', 'panelSpatialParameters', ...
    'Units','Normalized',...
    'Position',[0.02,0.1,0.9,0.8],...
    'FontSize',fontSize,...
    'FontName',fontName);%,...
%'Title', 'Spatial Parameters');

handles.panelSpatialParameters = uipanel( ...
    'Parent', handles.panelVisibleWindowSpatialProfile, ...
    'Tag', 'panelSpatialParameters', ...
    'Units','Normalized',...
    'Position',[0.0,-4,0.95,5],...
    'FontSize',fontSize,...
    'FontName',fontName);%,...
%'Title', 'Spatial Parameters');
handles.sliderSpatialParameters = uicontrol('Style','Slider',...
    'Parent', handles.panelVisibleWindowSpatialProfile,...
    'Units','normalized','Position',[0.95 0.0 0.05 1.0],...
    'Value',1,'Callback',{@sliderSpatialParameters_callback,handles});
% -----------------------------------------------------------------

handles.lblSpatialProfile = uicontrol( ...
    'Parent', handles.tabSpatialParameters, ...
    'Tag', 'lblSpatialProfile', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.90,0.40,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'Visible','On',...
    'String', 'Spatial Profile');

spatialProfileList = GetSupportedSpatialProfiles;
handles.popSpatialProfile = uicontrol( ...
    'Parent', handles.tabSpatialParameters, ...
    'Tag', 'popSpatialProfile', ...
    'Style', 'popupmenu', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.45,0.90,0.45,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', spatialProfileList, ...
    'Value',1,...
    'Visible','On',...
    'FontSize',fontSize,'FontName',fontName);

firstSpatialProfileType = spatialProfileList{1};
handles = displaySpatialProfileParameters(handles,firstSpatialProfileType);

% ----- 3. Sampling Parameters ----------------------------------
handles.tabSamplingParameters = ...
    uitab(handles.SourceDefinitionTabGroup, 'title','   Sampling Parameters   ');
handles.panelSamplingParameters = uipanel( ...
    'Parent', handles.tabSamplingParameters, ...
    'Tag', 'panelSamplingParameters', ...
    'Units','Normalized',...
    'Position', [0,0.1,1,0.9], ...
    'FontSize',fontSize,...
    'FontName',fontName);%,...
%'Title', 'Sampling Parameters');
handles.panelSamplingPointsAndDistance = uipanel( ...
    'Parent', handles.panelSamplingParameters, ...
    'Tag', 'panelSamplingPointsAndDistance', ...
    'Units','Normalized',...
    'Position', [0,0.15,1,0.85], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'Title', 'Sampling Points And Distance');

handles.lblSamplingPoints = uicontrol( ...
    'Parent', handles.panelSamplingPointsAndDistance, ...
    'Tag', 'lblSamplingPoints', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.90,0.45,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'String', 'Sampling Points (Nx:Ny)');


handles.txtSamplingPointsNx = uicontrol( ...
    'Parent', handles.panelSamplingPointsAndDistance, ...
    'Tag', 'txtSamplingPointsNx', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.50,0.90,0.20,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '0', ...
    'FontSize',fontSize,'FontName',fontName);

handles.txtSamplingPointsNy = uicontrol( ...
    'Parent', handles.panelSamplingPointsAndDistance, ...
    'Tag', 'txtSamplingPointsNy', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.75,0.90,0.20,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '0', ...
    'FontSize',fontSize,'FontName',fontName);
% -----------------------------------------------------------------
handles.lblSamplingDistance = uicontrol( ...
    'Parent', handles.panelSamplingPointsAndDistance, ...
    'Tag', 'lblSamplingPoints', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.80,0.45,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'String', 'Sampling Distance (dx:dy)');


handles.txtSamplingDistance_dx = uicontrol( ...
    'Parent', handles.panelSamplingPointsAndDistance, ...
    'Tag', 'txtSamplingDistanceDx', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.50,0.80,0.20,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '0', ...
    'FontSize',fontSize,'FontName',fontName);

handles.txtSamplingDistance_dy = uicontrol( ...
    'Parent', handles.panelSamplingPointsAndDistance, ...
    'Tag', 'txtSamplingDistanceDy', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.75,0.80,0.20,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '0', ...
    'FontSize',fontSize,'FontName',fontName);
% -----------------------------------------------------------------

handles.lblAdditionalBoarderSamplePoints = uicontrol( ...
    'Parent', handles.panelSamplingPointsAndDistance, ...
    'Tag', 'lblAdditionalBoarderSamplePoints', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.70,0.45,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'String', 'Boarder Sample Points (Nbx:Nby)');


handles.txtAdditionalBoarderSamplePointsNbx = uicontrol( ...
    'Parent', handles.panelSamplingPointsAndDistance, ...
    'Tag', 'txtAdditionalBoarderSamplePointsNbx', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.50,0.70,0.20,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '0', ...
    'FontSize',fontSize,'FontName',fontName);

handles.txtAdditionalBoarderSamplePointsNby = uicontrol( ...
    'Parent', handles.panelSamplingPointsAndDistance, ...
    'Tag', 'txtAdditionalBoarderSamplePointsNby', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.75,0.70,0.20,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '0', ...
    'FontSize',fontSize,'FontName',fontName);
% -----------------------------------------------------------------

handles.lblFieldDiameter = uicontrol( ...
    'Parent', handles.panelSamplingPointsAndDistance, ...
    'Tag', 'lblFieldDiameter', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.60,0.45,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'String', 'Field Diameter (Dx:Dy)');


handles.txtFieldDiameterDx = uicontrol( ...
    'Parent', handles.panelSamplingPointsAndDistance, ...
    'Tag', 'txtFieldDiameterDx', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.50,0.60,0.20,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '0', ...
    'Enable','Off',...
    'FontSize',fontSize,'FontName',fontName);

handles.txtFieldDiameterDy = uicontrol( ...
    'Parent', handles.panelSamplingPointsAndDistance, ...
    'Tag', 'txtFieldDiameterDy', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.75,0.60,0.20,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '0', ...
    'Enable','Off',...
    'FontSize',fontSize,'FontName',fontName);
% -----------------------------------------------------------------

handles.lblFieldDiameterTotal = uicontrol( ...
    'Parent', handles.panelSamplingPointsAndDistance, ...
    'Tag', 'lblFieldDiameterTotal', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.50,0.45,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'String', 'Field Diameter Total (TDx:TDy)');


handles.txtFieldDiameterTotalTDx = uicontrol( ...
    'Parent', handles.panelSamplingPointsAndDistance, ...
    'Tag', 'txtFieldDiameterTotalTDx', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.50,0.50,0.20,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '0', ...
    'Enable','Off',...
    'FontSize',fontSize,'FontName',fontName);

handles.txtFieldDiameterTotalTDy = uicontrol( ...
    'Parent', handles.panelSamplingPointsAndDistance, ...
    'Tag', 'txtFieldDiameterTotalTDy', ...
    'Style', 'edit', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.75,0.50,0.20,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', '0', ...
    'Enable','Off',...
    'FontSize',fontSize,'FontName',fontName);

% ----- 4. Spectral Parameters ----------------------------------

handles.tabSpectralParameters = ...
    uitab(handles.SourceDefinitionTabGroup, 'title','   Spectral Parameters   ');

% Panel with fixed size is used as window visible while using the
% slider to scroll through the uicontrols.

handles.panelVisibleWindowSpectralProfile = uipanel( ...
    'Parent', handles.tabSpectralParameters, ...
    'Tag', 'panelSpatialParameters', ...
    'Units','Normalized',...
    'Position',[0.02,0.1,0.9,0.8],...
    'FontSize',fontSize,...
    'FontName',fontName);%,...

handles.panelSpectralParameters = uipanel( ...
    'Parent', handles.panelVisibleWindowSpectralProfile, ...
    'Tag', 'panelSpectralParameters', ...
    'Units','Normalized',...
    'Position',[0.0,-4,0.95,5],...
    'FontSize',fontSize,...
    'FontName',fontName);%,...
%'Title', 'Spatial Parameters');
handles.sliderSpectralParameters = uicontrol('Style','Slider',...
    'Parent', handles.panelVisibleWindowSpectralProfile,...
    'Units','normalized','Position',[0.95 0.0 0.05 1.0],...
    'Value',1,'Callback',{@sliderSpectralParameters_callback,handles});
% -----------------------------------------------------------------

handles.lblSpectralProfile = uicontrol( ...
    'Parent', handles.tabSpectralParameters, ...
    'Tag', 'lblSpectralProfile', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.90,0.40,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'Visible','On',...
    'String', 'Spectral Profile');

spectralProfileList = GetSupportedSpectralProfiles;
handles.popSpectralProfile = uicontrol( ...
    'Parent', handles.tabSpectralParameters, ...
    'Tag', 'popSpatialProfile', ...
    'Style', 'popupmenu', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.45,0.90,0.45,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', spectralProfileList, ...
    'Value',1,...
    'Visible','On',...
    'FontSize',fontSize,'FontName',fontName);

firstSpectralProfileType = spectralProfileList{1};
handles = displaySpectralProfileParameters(handles,firstSpectralProfileType);

% ----- 5. Polarization Parameters ----------------------------------
handles.tabPolarizationParameters = ...
    uitab(handles.SourceDefinitionTabGroup, 'title','   Polarization Parameters   ');

% Panel with fixed size is used as window visible while using the
% slider to scroll through the uicontrols.
handles.panelVisibleWindowPolarizationProfile = uipanel( ...
    'Parent', handles.tabPolarizationParameters, ...
    'Tag', 'panelPolarizationParameters', ...
    'Units','Normalized',...
    'Position',[0.02,0.1,0.9,0.8],...
    'FontSize',fontSize,...
    'FontName',fontName);%,...

handles.panelPolarizationParameters = uipanel( ...
    'Parent', handles.panelVisibleWindowPolarizationProfile, ...
    'Tag', 'panelPolarizationParameters', ...
    'Units','Normalized',...
    'Position',[0.0,-4,0.95,5],...
    'FontSize',fontSize,...
    'FontName',fontName);%,...
%'Title', 'Spatial Parameters');
handles.sliderPolarizationParameters = uicontrol('Style','Slider',...
    'Parent', handles.panelVisibleWindowPolarizationProfile,...
    'Units','normalized','Position',[0.95 0.0 0.05 1.0],...
    'Value',1,'Callback',{@sliderPolarizationParameters_callback,handles});
% -----------------------------------------------------------------

handles.lblPolarizationProfile = uicontrol( ...
    'Parent', handles.tabPolarizationParameters, ...
    'Tag', 'lblPolarizationProfile', ...
    'Style', 'text', ...
    'HorizontalAlignment','right',...
    'Units','Normalized',...
    'Position', [0.02,0.90,0.40,0.075], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'Visible','On',...
    'String', 'Polarization Profile');

polarizationProfileList = GetSupportedPolarizationProfiles;
handles.popPolarizationProfile = uicontrol( ...
    'Parent', handles.tabPolarizationParameters, ...
    'Tag', 'popSpatialProfile', ...
    'Style', 'popupmenu', ...
    'HorizontalAlignment','left',...
    'Units','Normalized',...
    'Position', [0.45,0.90,0.45,0.075], ...
    'BackgroundColor', [1 1 1], ...
    'String', polarizationProfileList, ...
    'Value',1,...
    'Visible','On',...
    'FontSize',fontSize,'FontName',fontName);

firstPolarizationProfileType = polarizationProfileList{1};
handles = displayPolarizationProfileParameters(handles,firstPolarizationProfileType);





%-------------------------------------------------------------------
% Callbacks
set(handles.popSpatialProfile,...
    'Callback',{@popSpatialProfile_Callback,handles});
set(handles.popSpectralProfile,...
    'Callback',{@popSpectralProfile_Callback,handles});
set(handles.popPolarizationProfile,...
    'Callback',{@popPolarizationProfile_Callback,handles});

set(handles.popEdgeSizeSpecification,...
    'Callback',{@popEdgeSizeSpecification_Callback,handles});
set(handles.popFieldSizeSpecification,...
    'Callback',{@popFieldSizeSpecification_Callback,handles});


handles.cmdOk = uicontrol( ...
    'Parent', handles.FigureHandle, ...
    'Tag', 'cmdOk', ...
    'Style', 'pushbutton', ...
    'Units','Normalized',...
    'Position', [0.73,0.03,0.12,0.05], ...
    'FontSize',fontSize,...
    'FontName',fontName,...
    'String', 'Ok', ...
    'Callback', {@cmdOk_Callback,handles});
handles.cmdCancel = uicontrol( ...
    'Parent', handles.FigureHandle, ...
    'Tag', 'cmdCancel', ...
    'Style', 'pushbutton', ...
    'Units','Normalized',...
    'Position', [0.87,0.03,0.12,0.05], ...
    'FontSize',fontSize,'FontName',fontName,...
    'String', 'Cancel', ...
    'Callback', {@cmdCancel_Callback,handles});

%     % Display the first coating data
%     selectedCatalogueFullName = handles.FirstCatalogueFullName;
%     selectedCoatingIndex = 1;
%     displayCoatingData(selectedCatalogueFullName,selectedCoatingIndex,handles);
end


function cmdCancel_Callback(~,~,handles)
updatedSourceObject = handles.CurrentSourceObject;

close(handles.FigureHandle);
end
function cmdOk_Callback(~,~,handles)
% ----- 1. Basic Parameters --------------------------
lateralPositionX = str2num(get(handles.txtLateralPositionX,'String'));
lateralPositionY = str2num(get(handles.txtLateralPositionY,'String'));

distanceToInputPlane = str2num(get(handles.txtDistanceToInputPlane,'String'));

directionX = str2num(get(handles.txtDirectionX,'String'));
directionY = str2num(get(handles.txtDirectionY,'String'));
directionZ = str2num(get(handles.txtDirectionZ,'String'));

FieldSizeSpecificationString = get(handles.popFieldSizeSpecification,'String');
fieldSizeSpecification = FieldSizeSpecificationString{get(handles.popFieldSizeSpecification,'Value')};

relativeFieldSizeFactor = str2num(get(handles.txtRelativeFieldSizeFactor,'String'));

AbsoluteBoarderShapeString = get(handles.popAbsoluteBoarderShape,'String');
absoluteBoarderShape = AbsoluteBoarderShapeString{get(handles.popAbsoluteBoarderShape,'Value')};
absoluteEdgeSize = str2num(get(handles.txtAbsoluteEdgeSize,'String'));


EdgeSizeSpecificationString = get(handles.popEdgeSizeSpecification,'String');
edgeSizeSpecification = EdgeSizeSpecificationString{get(handles.popEdgeSizeSpecification,'Value')};

relativeEdgeSizeFactor = str2num(get(handles.txtRelativeEdgeSizeFactor,'String'));

absoluteEdgeSize = str2num(get(handles.txtAbsoluteEdgeSize,'String'));

% ----- 2. Spatial Parameters ---------------------------------
[spatialProfileType,spatialProfileParameters] = readSpatialProfileParameters(handles);

% ----- 3. Sampling Parameters ----------------------------------
Nx = str2num(get(handles.txtSamplingPointsNx,'String'));
Ny = str2num(get(handles.txtSamplingPointsNy,'String'));

dx = str2num(get(handles.txtSamplingDistance_dx,'String'));
dy = str2num(get(handles.txtSamplingDistance_dy,'String'));


Nbx = str2num(get(handles.txtAdditionalBoarderSamplePointsNbx,'String'));
Nby = str2num(get(handles.txtAdditionalBoarderSamplePointsNby,'String'));


% ----- 4. Spectral Parameters ---------------------------------
[spectralProfileType,spectralProfileParameters] = readSpectralProfileParameters(handles);


% ----- 5. Polarization Parameters ---------------------------------
[polarizationProfileType,polarizationProfileParameters] = readPolarizationProfileParameters(handles);

end

function updatedHandles = displaySpatialProfileParameters(handles,firstSpatialProfileType,firstSpatialParameters)

if nargin < 2
    disp('Error: The function displaySpatialProfileParameters requires atleast two inputs.');
    return;
elseif nargin == 2
    firstSpatialParameters = NaN;
elseif nargin == 3
    
end

fontSize = 11;
fontName = 'FixedSpace';
% get the spatial profile parameters from the corresponding
% spatial profile function
% Connect the spatial profile definition function
spatialProfileDefinitionHandle = str2func(firstSpatialProfileType);
returnFlag = 1; %
[ parameters, parameterFormats, intialValues ] = spatialProfileDefinitionHandle(...
    returnFlag);
% Calculate the size of panelSpatialParameters based on the number of
% parameters
nPar = length(parameters);
% Clear the panelSpatialParameters
delete(get(handles.panelSpatialParameters,'Child'));

panelSpatialParametersPosition = get(handles.panelSpatialParameters,'Position');
verticalScaleFactor = panelSpatialParametersPosition(4);
verticalOffset = panelSpatialParametersPosition(4)-1;

verticalFreeSpace = 0.025/verticalScaleFactor;% 2.5% of the the visial window height
controlHeight = 0.06/verticalScaleFactor;% 6% of the visial window height
topEdge = 0.1/verticalScaleFactor;% 10% of the the visial window height

lastUicontrolBottom = panelSpatialParametersPosition(4) - topEdge - 4; %panelSpatialParametersPosition(4)

horizontalFreeSpace = 0.05;% 5% of the visial window width
controlWidth = 0.4;% 40% of the visial window width then two controls per line
% control arrangement 5% + 40% + 5% + 40% + 5%
leftEdge = 0.05;%

for pp = 1:nPar
    % Display the parameter name
    handles.lblSpatialParameter(pp,1) = uicontrol( ...
        'Parent', handles.panelSpatialParameters, ...
        'Tag', 'lblParameter', ...
        'Style', 'text', ...
        'Units','normalized',...
        'Position', [leftEdge,lastUicontrolBottom-verticalFreeSpace,...
        controlWidth,controlHeight], ...
        'String',parameters{pp},...
        'HorizontalAlignment','right',...
        'Visible','On',...
        'FontSize',fontSize,'FontName',fontName);
    
    % Display the parameter value text boxes or popup menu
    parFormat = parameterFormats{pp};
    if strcmpi(parFormat{1},'logical')
        nVals = length(parFormat);
        % The parameter format is logical
        for vv = 1:nVals
            handles.chkSpatialParameter(pp,vv) = uicontrol( ...
                'Parent', handles.panelSpatialParameters, ...
                'Tag', 'chkParameter', ...
                'Style', 'checkbox', ...
                'Units','normalized',...
                'Position', [leftEdge+horizontalFreeSpace+controlWidth,lastUicontrolBottom-verticalFreeSpace,...
                horizontalFreeSpace,controlHeight], ...
                'String',parFormat, ...
                'BackgroundColor', [1 1 1],...
                'HorizontalAlignment','left',...
                'Visible','On',...
                'FontSize',fontSize,'FontName',fontName);
            lastUicontrolBottom = lastUicontrolBottom -verticalFreeSpace -controlHeight;
            
            currentValue = true;
            set(handles.txtSpatialParameter(pp,vv),'Value',currentValue);
        end
    elseif strcmpi(parFormat{1},'numeric')||strcmpi(parFormat{1},'char')
        nVals = length(parFormat);
        
        % The parameter format numeric/char
        for vv = 1:nVals
            handles.txtSpatialParameter(pp,vv) = uicontrol( ...
                'Parent', handles.panelSpatialParameters, ...
                'Tag', 'txtParameter', ...
                'Style', 'edit', ...
                'Units','normalized',...
                'Position', [leftEdge+horizontalFreeSpace+controlWidth,lastUicontrolBottom-verticalFreeSpace,...
                controlWidth,controlHeight], ...
                'String',parFormat, ...
                'BackgroundColor', [1 1 1],...
                'HorizontalAlignment','left',...
                'Visible','On',...
                'FontSize',fontSize,'FontName',fontName);
            lastUicontrolBottom = lastUicontrolBottom -verticalFreeSpace -controlHeight;
            
            currentValue = '1';
            set(handles.txtSpatialParameter(pp,vv),'String',currentValue);
        end
    else
        vv = 1;
        % The parameter format is list of selection itiems
        handles.popSpatialParameter(pp,vv) = uicontrol( ...
            'Parent', handles.panelSpatialParameters, ...
            'Tag', 'popParameter', ...
            'Style', 'popupmenu', ...
            'Units','normalized',...
            'Position', [leftEdge+horizontalFreeSpace+controlWidth,lastUicontrolBottom-verticalFreeSpace,...
            controlWidth,controlHeight], ...
            'String',parFormat, ...
            'BackgroundColor', [1 1 1],...
            'HorizontalAlignment','left',...
            'Visible','On',...
            'FontSize',fontSize,'FontName',fontName);
        
        lastUicontrolBottom = lastUicontrolBottom -verticalFreeSpace -controlHeight;
        
        currentValue = 1;
        set(handles.popSpatialParameter(pp,vv) ,'Value',currentValue);
    end
end
updatedHandles = handles;

% resize the handles.panelSpatialParameters
%set(handles.panelSpatialParameters,'Position',[0.0,-2.0,0.95,verticalScaleFactor-lastUicontrolBottom]);
end
function [spatialProfileType,spatialProfileParameters] =  readSpatialProfileParameters(handles)

spatialProfileTypeString = get(handles.popSpatialProfile,'String');
spatialProfileType = spatialProfileTypeString{get(handles.popSpatialProfile,'Value')};

% get the spectral profile parameters from the corresponding
% spatial profile function
% Connect the spectral profile definition function
spatialProfileDefinitionHandle = str2func(spatialProfileType);
returnFlag = 1; %
[ parameters, parameterFormats, intialValues ] = spatialProfileDefinitionHandle(...
    returnFlag);
% Calculate the size of panelspectralParameters based on the number of
% parameters
nPar = length(parameters);
for pp = 1:nPar    
    % Read the parameter value from text boxes or popup menu
    parFormat = parameterFormats{pp};
    if strcmpi(parFormat{1},'logical')
        nVals = length(parFormat);
        % The parameter format is logical
        for vv = 1:nVals            
            parameterValue{pp,vv} = get(handles.txtSpatialParameter(pp,vv),'Value');
        end
    elseif strcmpi(parFormat{1},'char')
        nVals = length(parFormat);
        
        % The parameter format char
        for vv = 1:nVals
            parameterValue{pp,vv} = get(handles.txtSpatialParameter(pp,vv),'String');          
        end
    elseif strcmpi(parFormat{1},'numeric')
        nVals = length(parFormat);
        
        % The parameter format numeric
        for vv = 1:nVals
            parameterValue{pp,vv} = str2num(get(handles.txtSpatialParameter(pp,vv),'String'));          
        end        
    else
        vv = 1;
        spatialParameterString = get(handles.popSpatialParameter(pp,vv),'String');
        parameterValue{pp,vv} = spatialParameterString{get(handles.popSpatialParameter(pp,vv),'Value')};
    end
end
spatialProfileParameters = parameterValue;
end
function sliderSpatialParameters_callback(src,eventdata,handles)
val = get(src,'Value');
panelSpatialParametersPosition = get(handles.panelSpatialParameters,'Position');
set(handles.panelSpatialParameters,'units','normalized','Position',...
    [panelSpatialParametersPosition(1),-4+ panelSpatialParametersPosition(4)*(1-val),...
    panelSpatialParametersPosition(3) panelSpatialParametersPosition(4)]);
end
function popSpatialProfile_Callback(~,~,handles )
SpatialProfileList = get(handles.popPolarizationProfile,'String');
SpatialProfileType = SpatialProfileList{get(handles.popSpatialProfile,'Value')};
handles = displaySpatialProfileParameters(handles,SpatialProfileType);
end

function updatedHandles = displaySpectralProfileParameters(handles,firstSpectralProfileType,firstSpectralParameters)

if nargin < 2
    disp('Error: The function displaySpectralProfileParameters requires atleast two inputs.');
    return;
elseif nargin == 2
    firstSpectralParameters = NaN;
elseif nargin == 3
    
end

fontSize = 11;
fontName = 'FixedSpace';
% get the spectral profile parameters from the corresponding
% spectral profile function
% Connect the spatial profile definition function
spectralProfileDefinitionHandle = str2func(firstSpectralProfileType);
returnFlag = 1; %
[ parameters, parameterFormats, intialValues ] = spectralProfileDefinitionHandle(...
    returnFlag);
% Calculate the size of panelSpatialParameters based on the number of
% parameters
nPar = length(parameters);
% Clear the panelSpectralParameters
delete(get(handles.panelSpectralParameters,'Child'));

panelSpectralParametersPosition = get(handles.panelSpectralParameters,'Position');
verticalScaleFactor = panelSpectralParametersPosition(4);
verticalOffset = panelSpectralParametersPosition(4)-1;

verticalFreeSpace = 0.025/verticalScaleFactor;% 2.5% of the the visial window height
controlHeight = 0.06/verticalScaleFactor;% 6% of the visial window height
topEdge = 0.1/verticalScaleFactor;% 10% of the the visial window height

lastUicontrolBottom = panelSpectralParametersPosition(4) - topEdge - 4; %panelSpectralParametersPosition(4)

horizontalFreeSpace = 0.05;% 5% of the visial window width
controlWidth = 0.4;% 40% of the visial window width then two controls per line
% control arrangement 5% + 40% + 5% + 40% + 5%
leftEdge = 0.05;%

for pp = 1:nPar
    % Display the parameter name
    handles.lblSpectralParameter(pp,1) = uicontrol( ...
        'Parent', handles.panelSpectralParameters, ...
        'Tag', 'lblParameter', ...
        'Style', 'text', ...
        'Units','normalized',...
        'Position', [leftEdge,lastUicontrolBottom-verticalFreeSpace,...
        controlWidth,controlHeight], ...
        'String',parameters{pp},...
        'HorizontalAlignment','right',...
        'Visible','On',...
        'FontSize',fontSize,'FontName',fontName);
    
    % Display the parameter value text boxes or popup menu
    parFormat = parameterFormats{pp};
    if strcmpi(parFormat{1},'logical')
        nVals = length(parFormat);
        % The parameter format is logical
        for vv = 1:nVals
            handles.chkSpectralParameter(pp,vv) = uicontrol( ...
                'Parent', handles.panelSpectralParameters, ...
                'Tag', 'chkParameter', ...
                'Style', 'checkbox', ...
                'Units','normalized',...
                'Position', [leftEdge+horizontalFreeSpace+controlWidth,lastUicontrolBottom-verticalFreeSpace,...
                horizontalFreeSpace,controlHeight], ...
                'String',parFormat, ...
                'BackgroundColor', [1 1 1],...
                'HorizontalAlignment','left',...
                'Visible','On',...
                'FontSize',fontSize,'FontName',fontName);
            lastUicontrolBottom = lastUicontrolBottom -verticalFreeSpace -controlHeight;
            
            currentValue = true;
            set(handles.txtSpectralParameter(pp,vv),'Value',currentValue);
        end
    elseif strcmpi(parFormat{1},'numeric')||strcmpi(parFormat{1},'char')
        nVals = length(parFormat);
        
        % The parameter format numeric/char
        for vv = 1:nVals
            handles.txtSpectralParameter(pp,vv) = uicontrol( ...
                'Parent', handles.panelSpectralParameters, ...
                'Tag', 'txtParameter', ...
                'Style', 'edit', ...
                'Units','normalized',...
                'Position', [leftEdge+horizontalFreeSpace+controlWidth,lastUicontrolBottom-verticalFreeSpace,...
                controlWidth,controlHeight], ...
                'String',parFormat, ...
                'BackgroundColor', [1 1 1],...
                'HorizontalAlignment','left',...
                'Visible','On',...
                'FontSize',fontSize,'FontName',fontName);
            lastUicontrolBottom = lastUicontrolBottom -verticalFreeSpace -controlHeight;
            
            currentValue = '1';
            set(handles.txtSpectralParameter(pp,vv),'String',currentValue);
        end
    else
        vv = 1;
        % The parameter format is list of selection itiems
        handles.popSpectralParameter(pp,vv) = uicontrol( ...
            'Parent', handles.panelSpectralParameters, ...
            'Tag', 'popParameter', ...
            'Style', 'popupmenu', ...
            'Units','normalized',...
            'Position', [leftEdge+horizontalFreeSpace+controlWidth,lastUicontrolBottom-verticalFreeSpace,...
            controlWidth,controlHeight], ...
            'String',parFormat, ...
            'BackgroundColor', [1 1 1],...
            'HorizontalAlignment','left',...
            'Visible','On',...
            'FontSize',fontSize,'FontName',fontName);
        
        lastUicontrolBottom = lastUicontrolBottom -verticalFreeSpace -controlHeight;
        
        currentValue = 1;
        set(handles.popSpectralParameter(pp,vv) ,'Value',currentValue);
    end
end
updatedHandles = handles;

% resize the handles.panelSpatialParameters
%set(handles.panelSpatialParameters,'Position',[0.0,-2.0,0.95,verticalScaleFactor-lastUicontrolBottom]);
end
function [spectralProfileType,spectralProfileParameters] =  readSpectralProfileParameters(handles)

spectralProfileTypeString = get(handles.popSpectralProfile,'String');
spectralProfileType = spectralProfileTypeString{get(handles.popSpectralProfile,'Value')};

% get the spectral profile parameters from the corresponding
% spatial profile function
% Connect the spectral profile definition function
spectralProfileDefinitionHandle = str2func(spectralProfileType);
returnFlag = 1; %
[ parameters, parameterFormats, intialValues ] = spectralProfileDefinitionHandle(...
    returnFlag);
% Calculate the size of panelspectralParameters based on the number of
% parameters
nPar = length(parameters);
for pp = 1:nPar    
    % Read the parameter value from text boxes or popup menu
    parFormat = parameterFormats{pp};
    if strcmpi(parFormat{1},'logical')
        nVals = length(parFormat);
        % The parameter format is logical
        for vv = 1:nVals            
            parameterValue{pp,vv} = get(handles.txtSpectralParameter(pp,vv),'Value');
        end
    elseif strcmpi(parFormat{1},'char')
        nVals = length(parFormat);
        
        % The parameter format char
        for vv = 1:nVals
            parameterValue{pp,vv} = get(handles.txtSpectralParameter(pp,vv),'String');          
        end
    elseif strcmpi(parFormat{1},'numeric')
        nVals = length(parFormat);
        
        % The parameter format numeric
        for vv = 1:nVals
            parameterValue{pp,vv} = str2num(get(handles.txtSpectralParameter(pp,vv),'String'));          
        end        
    else
        vv = 1;
        SpectralParameterString = get(handles.popSpectralParameter(pp,vv),'String');
        parameterValue{pp,vv} = SpectralParameterString{get(handles.popSpectralParameter(pp,vv),'Value')};
    end
end
spectralProfileParameters = parameterValue;
end
function sliderSpectralParameters_callback(src,eventdata,handles)
val = get(src,'Value');
panelSpectralParametersPosition = get(handles.panelSpectralParameters,'Position');
set(handles.panelSpectralParameters,'units','normalized','Position',...
    [panelSpectralParametersPosition(1),-4+ panelSpectralParametersPosition(4)*(1-val),...
    panelSpectralParametersPosition(3) panelSpectralParametersPosition(4)]);
end
function popSpectralProfile_Callback(~,~,handles )
SpectralProfileList = get(handles.popSpectralProfile,'String');
SpectralProfileType = SpectralProfileList{get(handles.popSpectralProfile,'Value')};
handles = displaySpectralProfileParameters(handles,SpectralProfileType);
end

function updatedHandles = displayPolarizationProfileParameters(handles,firstPolarizationProfileType,firstPolarizationParameters)

if nargin < 2
    disp('Error: The function displayPolarizationProfileParameters requires atleast two inputs.');
    return;
elseif nargin == 2
    firstPolarizationParameters = NaN;
elseif nargin == 3
    
end

fontSize = 11;
fontName = 'FixedSpace';
% get the Polarization profile parameters from the corresponding
% spatial profile function
% Connect the Polarization profile definition function
polarizationProfileDefinitionHandle = str2func(firstPolarizationProfileType);
returnFlag = 1; %
[ parameters, parameterFormats, intialValues ] = polarizationProfileDefinitionHandle(...
    returnFlag);
% Calculate the size of panelSpatialParameters based on the number of
% parameters
nPar = length(parameters);

% Clear the panelPolarizationParameters
delete(get(handles.panelPolarizationParameters,'Child'));

panelPolarizationParametersPosition = get(handles.panelPolarizationParameters,'Position');
verticalScaleFactor = panelPolarizationParametersPosition(4);
verticalOffset = panelPolarizationParametersPosition(4)-1;

verticalFreeSpace = 0.025/verticalScaleFactor;% 2.5% of the the visial window height
controlHeight = 0.06/verticalScaleFactor;% 6% of the visial window height
topEdge = 0.1/verticalScaleFactor;% 10% of the the visial window height

lastUicontrolBottom = panelPolarizationParametersPosition(4) - topEdge - 4; %panelPolarizationParametersPosition(4)

horizontalFreeSpace = 0.05;% 5% of the visial window width
controlWidth = 0.4;% 40% of the visial window width then two controls per line
% control arrangement 5% + 40% + 5% + 40% + 5%
leftEdge = 0.05;%

for pp = 1:nPar
    % Display the parameter name
    handles.lblPolarizationParameter(pp,1) = uicontrol( ...
        'Parent', handles.panelPolarizationParameters, ...
        'Tag', 'lblParameter', ...
        'Style', 'text', ...
        'Units','normalized',...
        'Position', [leftEdge,lastUicontrolBottom-verticalFreeSpace,...
        controlWidth,controlHeight], ...
        'String',parameters{pp},...
        'HorizontalAlignment','right',...
        'Visible','On',...
        'FontSize',fontSize,'FontName',fontName);
    
    % Display the parameter value text boxes or popup menu
    parFormat = parameterFormats{pp};
    if strcmpi(parFormat{1},'logical')
        nVals = length(parFormat);
        % The parameter format is logical
        for vv = 1:nVals
            handles.chkPolarizationParameter(pp,vv) = uicontrol( ...
                'Parent', handles.panelPolarizationParameters, ...
                'Tag', 'chkParameter', ...
                'Style', 'checkbox', ...
                'Units','normalized',...
                'Position', [leftEdge+horizontalFreeSpace+controlWidth,lastUicontrolBottom-verticalFreeSpace,...
                horizontalFreeSpace,controlHeight], ...
                'String',parFormat, ...
                'BackgroundColor', [1 1 1],...
                'HorizontalAlignment','left',...
                'Visible','On',...
                'FontSize',fontSize,'FontName',fontName);
            lastUicontrolBottom = lastUicontrolBottom -verticalFreeSpace -controlHeight;
            
            currentValue = true;
            set(handles.txtPolarizationParameter(pp,vv),'Value',currentValue);
        end
    elseif strcmpi(parFormat{1},'numeric')||strcmpi(parFormat{1},'char')
        nVals = length(parFormat);
        
        % The parameter format numeric/char
        for vv = 1:nVals
            handles.txtPolarizationParameter(pp,vv) = uicontrol( ...
                'Parent', handles.panelPolarizationParameters, ...
                'Tag', 'txtParameter', ...
                'Style', 'edit', ...
                'Units','normalized',...
                'Position', [leftEdge+horizontalFreeSpace+controlWidth,lastUicontrolBottom-verticalFreeSpace,...
                controlWidth,controlHeight], ...
                'String',parFormat, ...
                'BackgroundColor', [1 1 1],...
                'HorizontalAlignment','left',...
                'Visible','On',...
                'FontSize',fontSize,'FontName',fontName);
            lastUicontrolBottom = lastUicontrolBottom -verticalFreeSpace -controlHeight;
            
            currentValue = '1';
            set(handles.txtPolarizationParameter(pp,vv),'String',currentValue);
        end
    else
        vv = 1;
        % The parameter format is list of selection itiems
        handles.popPolarizationParameter(pp,vv) = uicontrol( ...
            'Parent', handles.panelPolarizationParameters, ...
            'Tag', 'popParameter', ...
            'Style', 'popupmenu', ...
            'Units','normalized',...
            'Position', [leftEdge+horizontalFreeSpace+controlWidth,lastUicontrolBottom-verticalFreeSpace,...
            controlWidth,controlHeight], ...
            'String',parFormat, ...
            'BackgroundColor', [1 1 1],...
            'HorizontalAlignment','left',...
            'Visible','On',...
            'FontSize',fontSize,'FontName',fontName);
        
        lastUicontrolBottom = lastUicontrolBottom -verticalFreeSpace -controlHeight;
        
        currentValue = 1;
        set(handles.popPolarizationParameter(pp,vv) ,'Value',currentValue);
    end
end
updatedHandles = handles;
% resize the handles.panelSpatialParameters
%set(handles.panelSpatialParameters,'Position',[0.0,-2.0,0.95,verticalScaleFactor-lastUicontrolBottom]);
end
function [polarizationType,polarizationParameters] =  readPolarizationProfileParameters(handles)

polarizationProfileTypeString = get(handles.popPolarizationProfile,'String');
polarizationType = polarizationProfileTypeString{get(handles.popPolarizationProfile,'Value')};

% get the Polarization profile parameters from the corresponding
% spatial profile function
% Connect the Polarization profile definition function
polarizationProfileDefinitionHandle = str2func(polarizationType);
returnFlag = 1; %
[ parameters, parameterFormats, intialValues ] = polarizationProfileDefinitionHandle(...
    returnFlag);
% Calculate the size of panelSpatialParameters based on the number of
% parameters
nPar = length(parameters);
for pp = 1:nPar    
    % Read the parameter value from text boxes or popup menu
    parFormat = parameterFormats{pp};
    if strcmpi(parFormat{1},'logical')
        nVals = length(parFormat);
        % The parameter format is logical
        for vv = 1:nVals            
            parameterValue{pp,vv} = get(handles.txtPolarizationParameter(pp,vv),'Value');
        end
    elseif strcmpi(parFormat{1},'char')
        nVals = length(parFormat);
        
        % The parameter format char
        for vv = 1:nVals
            parameterValue{pp,vv} = get(handles.txtPolarizationParameter(pp,vv),'String');          
        end
    elseif strcmpi(parFormat{1},'numeric')
        nVals = length(parFormat);
        
        % The parameter format numeric
        for vv = 1:nVals
            parameterValue{pp,vv} = str2num(get(handles.txtPolarizationParameter(pp,vv),'String'));          
        end        
    else
        vv = 1;
        PolarizationParameterString = get(handles.popPolarizationParameter(pp,vv),'String');
        parameterValue{pp,vv} = PolarizationParameterString{get(handles.popPolarizationParameter(pp,vv),'Value')};
    end
end
polarizationParameters = parameterValue;
end
function sliderPolarizationParameters_callback(src,eventdata,handles)
val = get(src,'Value');
panelPolarizationParametersPosition = get(handles.panelPolarizationParameters,'Position');
set(handles.panelPolarizationParameters,'units','normalized','Position',...
    [panelPolarizationParametersPosition(1),-4+ panelPolarizationParametersPosition(4)*(1-val),...
    panelPolarizationParametersPosition(3) panelPolarizationParametersPosition(4)]);
end
function popPolarizationProfile_Callback(~,~,handles )
polarizationProfileList = get(handles.popPolarizationProfile,'String');
polarizationProfileType = polarizationProfileList{get(handles.popPolarizationProfile,'Value')};
handles = displayPolarizationProfileParameters(handles,polarizationProfileType);
end

function popEdgeSizeSpecification_Callback(~,~,handles )
EdgeSizeSpecificationString = get(handles.popEdgeSizeSpecification,'String');
switch lower(EdgeSizeSpecificationString{get(handles.popEdgeSizeSpecification,'Value')})
    case lower('Relative')
        set(handles.lblAbsoluteEdgeSize,'Visible','Off');
        set(handles.txtAbsoluteEdgeSize,'Visible','Off');
        set(handles.lblRelativeEdgeSizeFactor,'Visible','On');
        set(handles.txtRelativeEdgeSizeFactor,'Visible','On');
    case lower('Absolute')
        set(handles.lblAbsoluteEdgeSize,'Visible','On');
        set(handles.txtAbsoluteEdgeSize,'Visible','On');
        set(handles.lblRelativeEdgeSizeFactor,'Visible','Off');
        set(handles.txtRelativeEdgeSizeFactor,'Visible','Off');
end
end
function popFieldSizeSpecification_Callback(~,~,handles )
FieldSizeSpecificationString = get(handles.popFieldSizeSpecification,'String');
switch lower(FieldSizeSpecificationString{get(handles.popFieldSizeSpecification,'Value')})
    case lower('Relative')
        set(handles.lblAbsoluteFieldSize,'Visible','Off');
        set(handles.txtAbsoluteFieldSize,'Visible','Off');
        set(handles.lblAbsoluteBoarderShape,'Visible','Off');
        set(handles.popAbsoluteBoarderShape,'Visible','Off');
        set(handles.lblRelativeFieldSizeFactor,'Visible','On');
        set(handles.txtRelativeFieldSizeFactor,'Visible','On');
        
    case lower('Absolute')
        set(handles.lblAbsoluteFieldSize,'Visible','On');
        set(handles.txtAbsoluteFieldSize,'Visible','On');
        set(handles.lblAbsoluteBoarderShape,'Visible','On');
        set(handles.popAbsoluteBoarderShape,'Visible','On');
        set(handles.lblRelativeFieldSizeFactor,'Visible','Off');
        set(handles.txtRelativeFieldSizeFactor,'Visible','Off');
        
end
end

